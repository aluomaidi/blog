{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/alipay.jpg","path":"alipay.jpg","modified":0,"renderable":0},{"_id":"source/me.jpg","path":"me.jpg","modified":0,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"source/wechatpay.jpg","path":"wechatpay.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","path":"vendors/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","path":"vendors/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/404.html","hash":"d9c9db5465183d9bb87d3b395bfb06aa998d3d80","modified":1474596525603},{"_id":"source/alipay.jpg","hash":"fafb9fbba7055de9aa7753f7d14b0cd3c0fa71c7","modified":1474602694003},{"_id":"source/me.jpg","hash":"a8503f245dbcb566b8d8fd71f8769f4c02e4683a","modified":1474603062570},{"_id":"source/favicon.ico","hash":"91fde6a035ef79fd1e6d1a15669b7457fba764bb","modified":1474596525622},{"_id":"source/wechatpay.jpg","hash":"a04a5dd591c1e5b816827a1d6109a76ed1dbc0df","modified":1474602700553},{"_id":"themes/next/.bowerrc","hash":"80e096fdc1cf912ee85dd9f7e6e77fd40cf60f10","modified":1471527441000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1471527441000},{"_id":"themes/next/.gitignore","hash":"c8d6a73b9e17f0f8a3716e4ada6960d3180425a6","modified":1471527441000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1471527441000},{"_id":"themes/next/.javascript_ignore","hash":"d619ee13031908cd72666e4ff652d2ea3483b1c3","modified":1471527441000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1471527441000},{"_id":"themes/next/README.en.md","hash":"565ba52b3825b85a9f05b41183caca7f18b741d4","modified":1471527441000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1471527441000},{"_id":"themes/next/_config.yml","hash":"43756729735ffeaf8c008724228c19087b4fc882","modified":1474615422510},{"_id":"themes/next/bower.json","hash":"f89c6700a11d81e067cc97273ca6bf96cb88c8f9","modified":1471527441000},{"_id":"themes/next/gulpfile.coffee","hash":"26e5b1b945704c8bc78b928feede895c4c111c95","modified":1471527441000},{"_id":"themes/next/package.json","hash":"63e9c0f1dd9e5d7f51b4ae383981ef939a2ed45d","modified":1471527441000},{"_id":"source/_posts/为什么用hexo代替jekyll.md","hash":"122b41865a571f7abfbcb91e54c2d72e7c575289","modified":1474596525610},{"_id":"source/_posts/hello-world.md","hash":"80bb958d3adf481af2224b949bb86083c6f1c5fb","modified":1474596525607},{"_id":"source/_posts/数据库事务与锁详解.md","hash":"abae52f908c260bda6336345cec3c3ccc9ef7095","modified":1474596525613},{"_id":"source/about/index.md","hash":"a3c1589a1b2c7b3a18c8955f09a105a3dce2bb58","modified":1474596525616},{"_id":"source/categories/index.md","hash":"df45d6eeebe350b4600eacbb187456b7bae06f1b","modified":1474596525619},{"_id":"source/tags/index.md","hash":"f238c222825c616ecf4a2575061587aafb1c1af8","modified":1474596525625},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1471527441000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"c2024ded82143807c28a299c5fe6b927ef3525ff","modified":1471527441000},{"_id":"themes/next/languages/default.yml","hash":"9db835c0543ade5a89bc80ec5a898203227cf3d8","modified":1471527441000},{"_id":"themes/next/languages/en.yml","hash":"f03799cbdb5a33064ead080bcac4baca1f6bc5f9","modified":1471527441000},{"_id":"themes/next/languages/de.yml","hash":"786afba25cfc98845a20d9901823ebeebcd1cbbf","modified":1471527441000},{"_id":"themes/next/languages/fr-FR.yml","hash":"1a084623c39de74301f3e92f9388a3a815a542ca","modified":1471527441000},{"_id":"themes/next/languages/id.yml","hash":"147c01e41b931085ad14250fa900c2249dcbbdd7","modified":1471527441000},{"_id":"themes/next/languages/ko.yml","hash":"ce8b047c89daae77c03482fc76f16ffec6bdbf2d","modified":1471527441000},{"_id":"themes/next/languages/ja.yml","hash":"a2c7b6301b5474aab798946fb700289df237c3cf","modified":1471527441000},{"_id":"themes/next/languages/pt-BR.yml","hash":"462aa865ca3d479bcf6b363cba61247b50f230ff","modified":1471527441000},{"_id":"themes/next/languages/pt.yml","hash":"ca239b39bf65c9462e59d51b12f0fe566d453197","modified":1471527441000},{"_id":"themes/next/languages/ru.yml","hash":"cc7b964a46587aea0e57b0a5269d8fd25570858e","modified":1471527441000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"e76eeb17e782263b2822edf991d650e71180a782","modified":1474607938833},{"_id":"themes/next/languages/zh-hk.yml","hash":"519ab3d817ec3bc5bfc91159c494b6b3c170bea7","modified":1471527441000},{"_id":"themes/next/languages/zh-tw.yml","hash":"6b1f345aaefc13e6723dc8a6741b59ac05c20dfd","modified":1471527441000},{"_id":"themes/next/layout/_layout.swig","hash":"74157f6cfd679ea11febec632542793f37c5e5d4","modified":1471527441000},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1471527441000},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1471527441000},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1471527441000},{"_id":"themes/next/layout/page.swig","hash":"8019d02232a6dd1a665b6a4d2daef8e5dd2f0049","modified":1471527441000},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1471527441000},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1471527441000},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1471527441000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1471527441000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1471527441000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1471527441000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1471527441000},{"_id":"themes/next/layout/_macro/post.swig","hash":"f3895bf44a9fb7c462f2e57b9a914703c2f152ba","modified":1471527441000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"43c3433155ccd9abcbe7dce2e6bfa1f3a66af18b","modified":1471527441000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1471527441000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"1a77843ce5eac62151dc3d38f0a36c43e19e1a74","modified":1471527441000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1471527441000},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1471527441000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"58fd826ca75b0cbc48b61a58da4b841e2fa34403","modified":1471527441000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"4fe588ff8ba8587885c2936db2df490774f89e10","modified":1471527441000},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b0c495b8154ef8b2d2cb0a554e164ff22cdc962","modified":1471527441000},{"_id":"themes/next/layout/_partials/header.swig","hash":"eb028685cb3c329537bbced06c063d23e6a33817","modified":1471527441000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1471527441000},{"_id":"themes/next/layout/_partials/search.swig","hash":"011b9d6c9f0a2f4654908ea20b9391f9b7981271","modified":1471527441000},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"82d060fe055d6e423bbc9199f82dfe5c68e74779","modified":1471527441000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1471527441000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1471527441000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"0b91cadecead8e0b5211cc42b085998d94af503a","modified":1471527441000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1471527441000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"3acce36db0feb11a982c6c799aa6b6b47df2827c","modified":1471527441000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1471527441000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1471527441000},{"_id":"themes/next/source/images/avatar.gif","hash":"a8503f245dbcb566b8d8fd71f8769f4c02e4683a","modified":1474603062570},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1471527441000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1471527441000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1471527441000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1471527441000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1471527441000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1471527441000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1471527441000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1471527441000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1471527441000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1471527441000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1471527441000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1471527441000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1471527441000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1471527441000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1471527441000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1471527441000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1471527441000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1471527441000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1471527441000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1471527441000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1471527441000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1471527441000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1471527441000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"7ca5cb4daa58b3504e17f3e02975e794bc634658","modified":1471527441000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"c07f7b2f264e5215b8ed42d67e8cef2477558364","modified":1471527441000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1471527441000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1471527441000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1471527441000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1471527441000},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"0a89c04055bade7baa5962f1d5aefe438d83a244","modified":1471527441000},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"907b931d775d32405d02a25b3b0a3ac03bf804d0","modified":1471527441000},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1471527441000},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"7f7148c8f52e4d3cfc070d964160362179fa8e91","modified":1471527441000},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"5bafc33f57508d1d04a9930165240f6e9efa8d6d","modified":1471527441000},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1471527441000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1471527441000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1471527441000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1471527441000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1471527441000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"3ead77befa064d6327dc7afd0a5af7be59a5f196","modified":1471527441000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"17624186f7a1f28daddea258d044f8e03b2f4bea","modified":1471527441000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1471527441000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1471527441000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1471527441000},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1471527441000},{"_id":"themes/next/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1471527441000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1471527441000},{"_id":"themes/next/source/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1471527441000},{"_id":"themes/next/source/vendors/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1471527441000},{"_id":"themes/next/source/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1471527441000},{"_id":"themes/next/source/vendors/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1471527441000},{"_id":"themes/next/source/vendors/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1471527441000},{"_id":"themes/next/source/vendors/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1471527441000},{"_id":"themes/next/source/vendors/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1471527441000},{"_id":"themes/next/source/vendors/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1471527441000},{"_id":"themes/next/source/vendors/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1471527441000},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1471527441000},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1471527441000},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1471527441000},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1471527441000},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1471527441000},{"_id":"themes/next/source/vendors/font-awesome/.bower.json","hash":"7da985a99674e54f514d4fd9fcd3bcea6e7e41d5","modified":1471527441000},{"_id":"themes/next/source/vendors/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1471527441000},{"_id":"themes/next/source/vendors/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1471527441000},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1471527441000},{"_id":"themes/next/source/vendors/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1471527441000},{"_id":"themes/next/source/vendors/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1471527441000},{"_id":"themes/next/source/vendors/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1471527441000},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1471527441000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1471527441000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1471527441000},{"_id":"themes/next/source/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1471527441000},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"7c43d66da93cde65b473a7d6db2a86f9a42647d6","modified":1471527441000},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1471527441000},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"1e3e1c6231408e18e8485a8e0e59e8880349b210","modified":1471527441000},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1471527441000},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1471527441000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1471527441000},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"bff3b18f56175c53f3bc6d733166c4d998e08732","modified":1471527441000},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"696666141cdd204fd8818ac2ad18f05e320f8587","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1471527441000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1471527441000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1471527441000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1471527441000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1471527441000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1471527441000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1471527441000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1471527441000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1471527441000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1471527441000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1471527441000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"4303776991ef28f5742ca51c7dffe6f12f0acf34","modified":1471527441000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1471527441000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1471527441000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"6ed60cc621bac096c0ed7534fa25b1a52dc571d4","modified":1471527441000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1471527441000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"c2c6c4f6434b4f94aac2af5861cd769427f0ee10","modified":1471527441000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1471527441000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1471527441000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"be22ad34f546a07f6d56b424338cdd898683eea4","modified":1471527441000},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"938d39eedc6e3d33918c1145a5bf1e79991d3fcf","modified":1471527441000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"8d7cecde4933900c7df2db9d0a98f5f82f88dc93","modified":1471527441000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"d09280e5b79f3b573edb30f30c7a5f03ac640986","modified":1471527441000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1471527441000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"d4b7bd610ca03dbb2f5b66631c0e84a79fb4660b","modified":1471527441000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"1b10ba2d3ad0c063c418dc94a0b7e0db4b342c53","modified":1471527441000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1471527441000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1471527441000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1471527441000},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1471527441000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1471527441000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1471527441000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1471527441000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1471527441000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1471527441000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1471527441000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1471527441000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1471527441000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1471527441000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1471527441000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1471527441000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1471527441000},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1471527441000},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1471527441000},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1471527441000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1471527441000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1471527441000},{"_id":"themes/next/source/vendors/velocity/velocity.js","hash":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"4da051c7f3924fa2db1e73c55b2baf1c2c150255","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"90f8f9706cd7fe829cf06e9959a65fd3f8b994fa","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"3c46efd6601e268093ce6d7b1471d18501878f0d","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d543d1377c1f61b70e3adb6da0eb12797552e5f2","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"15063d79b5befc21820baf05d6f20cc1c1787477","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"cbca4842a54950e2934b3b8f3cd940f122111aef","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"4eb18b12fa0ea6c35925d9a64f64e2a7dae8c7fd","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"618f73450cf541f88a4fddc3d22898aee49d105d","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"8e66c2635d48e11de616bb29c4b1323698eebc0a","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"795d94561888d31cb7a6ff4a125596809ea69b7d","modified":1471527441000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"3afc459442c132c480d1d832f1a872f1070bb048","modified":1471527441000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1471527441000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1471527441000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1471527441000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1471527441000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1471527441000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1471527441000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1471527441000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1471527441000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1471527441000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1471527441000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1471527441000},{"_id":"public/404.html","hash":"c409e23a2bcbab890fc71f78643cb179d6816cca","modified":1474610737700},{"_id":"public/about/index.html","hash":"6fa978e0f5386c3d9be332591f934fa73ed401b6","modified":1474610737700},{"_id":"public/categories/index.html","hash":"7de6d8ef36920ae8928bb92e6e6de282db9c91cd","modified":1474610737701},{"_id":"public/tags/index.html","hash":"2b07d9357a284311226c305b7c90983c78beb1a6","modified":1474610737701},{"_id":"public/categories/hexo/index.html","hash":"d429bf9df4fcf285a4e01b8f457f8ecabdd442ec","modified":1474610737701},{"_id":"public/categories/数据库/index.html","hash":"55c07bc9c158e88db175dc07816f8c771fe7fdb4","modified":1474610737701},{"_id":"public/categories/数据库/事务/index.html","hash":"8730498815de9f4733bcbc9d43e9dea52282d06f","modified":1474610737701},{"_id":"public/tags/hexo/index.html","hash":"47270962a62024a8db7020f42d5daa3e2bba8e18","modified":1474610737701},{"_id":"public/tags/jekyll/index.html","hash":"2b2365448bd30905cbf5ed0969f0c6a2e1a16ade","modified":1474610737701},{"_id":"public/tags/事务/index.html","hash":"50cb32577ef6bf878d8c51b4f807ad3569742d87","modified":1474610737701},{"_id":"public/tags/数据库锁/index.html","hash":"db6b86aa158dbf692482ddfa400789d17d04bb81","modified":1474610737701},{"_id":"public/hexo/hello-world/index.html","hash":"f3173bb32181d9d26f0ea214961ec2ffbb9c18b4","modified":1474610737701},{"_id":"public/hexo/为什么用hexo代替jekyll/index.html","hash":"ff05e8b08f1b5945cf56163bf466d0f46a7e7b9d","modified":1474610737701},{"_id":"public/数据库/事务/数据库事务与锁详解/index.html","hash":"198c39d5c5c93212be537e85afd839b70ee1f4c6","modified":1474610737702},{"_id":"public/archives/index.html","hash":"0255fbc0b4ef335b8c1e27fe0119bd829dd4dda1","modified":1474610737702},{"_id":"public/archives/2016/index.html","hash":"ca2fd1fb7aabc30ee23090d3f09f0762a1c06662","modified":1474610737702},{"_id":"public/archives/2016/09/index.html","hash":"68453277d71a072a7f4c8ba1abc27fdf30a55032","modified":1474610737702},{"_id":"public/index.html","hash":"4417dad67ba7926d13b9aff1fc91a23ec0fa8799","modified":1474610737702},{"_id":"public/favicon.ico","hash":"91fde6a035ef79fd1e6d1a15669b7457fba764bb","modified":1474610737723},{"_id":"public/alipay.jpg","hash":"fafb9fbba7055de9aa7753f7d14b0cd3c0fa71c7","modified":1474610737723},{"_id":"public/me.jpg","hash":"a8503f245dbcb566b8d8fd71f8769f4c02e4683a","modified":1474610737723},{"_id":"public/wechatpay.jpg","hash":"a04a5dd591c1e5b816827a1d6109a76ed1dbc0df","modified":1474610737723},{"_id":"public/images/avatar.gif","hash":"a8503f245dbcb566b8d8fd71f8769f4c02e4683a","modified":1474610737723},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1474610737723},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1474610737723},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1474610737723},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1474610737723},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1474610737723},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1474610737723},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1474610737723},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1474610737723},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1474610737723},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1474610737723},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1474610737723},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1474610737723},{"_id":"public/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1474610737724},{"_id":"public/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1474610737724},{"_id":"public/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1474610737724},{"_id":"public/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1474610737724},{"_id":"public/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1474610737724},{"_id":"public/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1474610737725},{"_id":"public/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1474610737725},{"_id":"public/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1474610737725},{"_id":"public/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1474610737725},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1474610737725},{"_id":"public/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1474610737725},{"_id":"public/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1474610738582},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1474610738586},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1474610738588},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1474610738595},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1474610738595},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1474610738595},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1474610738595},{"_id":"public/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1474610738595},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1474610738595},{"_id":"public/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1474610738595},{"_id":"public/vendors/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1474610738595},{"_id":"public/vendors/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1474610738595},{"_id":"public/vendors/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1474610738595},{"_id":"public/vendors/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1474610738595},{"_id":"public/vendors/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1474610738596},{"_id":"public/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1474610738596},{"_id":"public/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1474610738596},{"_id":"public/vendors/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1474610738596},{"_id":"public/vendors/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1474610738596},{"_id":"public/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1474610738596},{"_id":"public/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1474610738596},{"_id":"public/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1474610738596},{"_id":"public/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1474610738596},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1474610738596},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1474610738596},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1474610738596},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1474610738596},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1474610738596},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1474610738596},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1474610738596},{"_id":"public/css/main.css","hash":"36b179f3b250d156b6e5d40f8d9e10810be50f55","modified":1474610738597},{"_id":"public/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1474610738597},{"_id":"public/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1474610738597},{"_id":"public/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1474610738597},{"_id":"public/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1474610738597},{"_id":"public/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1474610738597},{"_id":"public/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1474610738597},{"_id":"public/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1474610738597},{"_id":"public/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1474610738597},{"_id":"public/vendors/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1474610738597},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1474610738597},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1474610738752}],"Category":[{"name":"hexo","_id":"citfd5qcc0005vgxs12iuzp47"},{"name":"数据库","_id":"citfd5qcr000cvgxscj7gbcum"},{"name":"事务","parent":"citfd5qcr000cvgxscj7gbcum","_id":"citfd5qcy000jvgxszmygo4kk"}],"Data":[],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"your site url \"\n        homePageName=\"回到我的主页\">\n</script>\n\n</body>\n</html>\n","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"your site url \"\n        homePageName=\"回到我的主页\">\n</script>\n\n</body>\n</html>\n","date":"2016-09-23T02:08:45.603Z","updated":"2016-09-23T02:08:45.603Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"citfd5q5h0000vgxsentg3szn","content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"your site url \" homepagename=\"回到我的主页\">\n</script>\n\n</body>\n</html>\n","excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"your site url \"\n        homePageName=\"回到我的主页\">\n</script>\n\n</body>\n</html>\n"},{"title":"about","date":"2016-09-22T17:23:57.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2016-09-23 01:23:57\n---\n","updated":"2016-09-23T02:08:45.616Z","path":"about/index.html","comments":1,"layout":"page","_id":"citfd5qc20002vgxs6cy57j1c","content":"","excerpt":"","more":""},{"title":"categories","date":"2014-12-22T04:39:04.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2014-12-22 12:39:04\ntype: \"categories\"\ncomments: false\n---","updated":"2016-09-23T02:08:45.619Z","path":"categories/index.html","layout":"page","_id":"citfd5qc90004vgxs1z188lgg","content":"","excerpt":"","more":""},{"title":"Tagcloud","date":"2014-12-22T04:39:04.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: Tagcloud\ndate: 2014-12-22 12:39:04\ntype: \"tags\"\ncomments: false\n---","updated":"2016-09-23T02:08:45.625Z","path":"tags/index.html","layout":"page","_id":"citfd5qci0008vgxsgq7jvlka","content":"","excerpt":"","more":""}],"Post":[{"title":"为什么用hexo代替jekyll","date":"2016-09-22T07:54:49.000Z","_content":"最近想要搞个个人博客，因为不想自己搞站点，所以找到了github pages，它提供给我们域名和空间，多省事啊。那静态页面用什么工具呢？一开始我用的是jekyll,然后我有了那句经典的感受，那句话是从入门到放弃，啊，多么痛的领悟！\n<!--more-->\n下面我来扒一扒：\n\n官网，那个色调看着很伤眼睛啊，一个docs看下来,我是眼泪往下流啊，hexo的暖色调就像天使，下面放图对比一下\n \n ![这里写图片描述](http://img.blog.csdn.net/20160922102957967)\n\n![这里写图片描述](http://img.blog.csdn.net/20160922103017983)\n\n \n**如果你自认为眼睛很好，那就继续往下看**\n\njekyll需要安装ruby,python等，hexo需要nodejs，当然为了push到github都需要装个git,速度上jekyll生成静态站点的速度比hexo慢多了，如果你时间多。\n\n**如果你正好想休息喝杯茶，不在乎慢点，那也请继续往下看**\n\n便捷性，hexo完爆jekyll，同样是quick start，虽然都是几个命令，就可以预览效果了，但是效果差了十万八千里，这个必须上图\n\n![这里写图片描述](http://img.blog.csdn.net/20160922110655751)\n\n![这里写图片描述](http://img.blog.csdn.net/20160922110954153)\n \n jekyll直接显示个空白页，你没看错，哈哈，hexo我加了个文章，为了让你看到分类功能，其他什么没干，这就是差别\n\n**你竟然看到了这里？看来上面三条对你都是小case，那说明你还没有绝望啊，勇士请继续**\n\n插件和样式，你写完post，想做个categories？对于hexo就是so easy，在你的文章前面的使用category: 分类名，hexo就给你在右边生成，包括分类主页，默认样式，你啥都不用干。而jekyll需要自己写标签语言遍历然后在创建各个分类的主页，在设置页面css，或者用ruby写插件去搞，这下老子要骂娘了，我他妈根本不会ruby啊，官方为什么不主动提供好现成的插件？我只是个后端工程师，不是全栈，页面+css真的玩不来，不知道提供些theme供人选择？\n\n**如果你是个受虐狂，去捣鼓jekyll吧**\n","source":"_posts/为什么用hexo代替jekyll.md","raw":"---\ntitle: 为什么用hexo代替jekyll\ndate: 2016-09-22 15:54:49\ncategories: \n- hexo\ntags:\n- hexo\n- jekyll\n---\n最近想要搞个个人博客，因为不想自己搞站点，所以找到了github pages，它提供给我们域名和空间，多省事啊。那静态页面用什么工具呢？一开始我用的是jekyll,然后我有了那句经典的感受，那句话是从入门到放弃，啊，多么痛的领悟！\n<!--more-->\n下面我来扒一扒：\n\n官网，那个色调看着很伤眼睛啊，一个docs看下来,我是眼泪往下流啊，hexo的暖色调就像天使，下面放图对比一下\n \n ![这里写图片描述](http://img.blog.csdn.net/20160922102957967)\n\n![这里写图片描述](http://img.blog.csdn.net/20160922103017983)\n\n \n**如果你自认为眼睛很好，那就继续往下看**\n\njekyll需要安装ruby,python等，hexo需要nodejs，当然为了push到github都需要装个git,速度上jekyll生成静态站点的速度比hexo慢多了，如果你时间多。\n\n**如果你正好想休息喝杯茶，不在乎慢点，那也请继续往下看**\n\n便捷性，hexo完爆jekyll，同样是quick start，虽然都是几个命令，就可以预览效果了，但是效果差了十万八千里，这个必须上图\n\n![这里写图片描述](http://img.blog.csdn.net/20160922110655751)\n\n![这里写图片描述](http://img.blog.csdn.net/20160922110954153)\n \n jekyll直接显示个空白页，你没看错，哈哈，hexo我加了个文章，为了让你看到分类功能，其他什么没干，这就是差别\n\n**你竟然看到了这里？看来上面三条对你都是小case，那说明你还没有绝望啊，勇士请继续**\n\n插件和样式，你写完post，想做个categories？对于hexo就是so easy，在你的文章前面的使用category: 分类名，hexo就给你在右边生成，包括分类主页，默认样式，你啥都不用干。而jekyll需要自己写标签语言遍历然后在创建各个分类的主页，在设置页面css，或者用ruby写插件去搞，这下老子要骂娘了，我他妈根本不会ruby啊，官方为什么不主动提供好现成的插件？我只是个后端工程师，不是全栈，页面+css真的玩不来，不知道提供些theme供人选择？\n\n**如果你是个受虐狂，去捣鼓jekyll吧**\n","slug":"为什么用hexo代替jekyll","published":1,"updated":"2016-09-23T02:08:45.610Z","comments":1,"layout":"post","photos":[],"link":"","_id":"citfd5qbw0001vgxsxyiwp2gk","content":"<p>最近想要搞个个人博客，因为不想自己搞站点，所以找到了github pages，它提供给我们域名和空间，多省事啊。那静态页面用什么工具呢？一开始我用的是jekyll,然后我有了那句经典的感受，那句话是从入门到放弃，啊，多么痛的领悟！<br><a id=\"more\"></a><br>下面我来扒一扒：</p>\n<p>官网，那个色调看着很伤眼睛啊，一个docs看下来,我是眼泪往下流啊，hexo的暖色调就像天使，下面放图对比一下</p>\n<p> <img src=\"http://img.blog.csdn.net/20160922102957967\" alt=\"这里写图片描述\"></p>\n<p><img src=\"http://img.blog.csdn.net/20160922103017983\" alt=\"这里写图片描述\"></p>\n<p><strong>如果你自认为眼睛很好，那就继续往下看</strong></p>\n<p>jekyll需要安装ruby,python等，hexo需要nodejs，当然为了push到github都需要装个git,速度上jekyll生成静态站点的速度比hexo慢多了，如果你时间多。</p>\n<p><strong>如果你正好想休息喝杯茶，不在乎慢点，那也请继续往下看</strong></p>\n<p>便捷性，hexo完爆jekyll，同样是quick start，虽然都是几个命令，就可以预览效果了，但是效果差了十万八千里，这个必须上图</p>\n<p><img src=\"http://img.blog.csdn.net/20160922110655751\" alt=\"这里写图片描述\"></p>\n<p><img src=\"http://img.blog.csdn.net/20160922110954153\" alt=\"这里写图片描述\"></p>\n<p> jekyll直接显示个空白页，你没看错，哈哈，hexo我加了个文章，为了让你看到分类功能，其他什么没干，这就是差别</p>\n<p><strong>你竟然看到了这里？看来上面三条对你都是小case，那说明你还没有绝望啊，勇士请继续</strong></p>\n<p>插件和样式，你写完post，想做个categories？对于hexo就是so easy，在你的文章前面的使用category: 分类名，hexo就给你在右边生成，包括分类主页，默认样式，你啥都不用干。而jekyll需要自己写标签语言遍历然后在创建各个分类的主页，在设置页面css，或者用ruby写插件去搞，这下老子要骂娘了，我他妈根本不会ruby啊，官方为什么不主动提供好现成的插件？我只是个后端工程师，不是全栈，页面+css真的玩不来，不知道提供些theme供人选择？</p>\n<p><strong>如果你是个受虐狂，去捣鼓jekyll吧</strong></p>\n","excerpt":"<p>最近想要搞个个人博客，因为不想自己搞站点，所以找到了github pages，它提供给我们域名和空间，多省事啊。那静态页面用什么工具呢？一开始我用的是jekyll,然后我有了那句经典的感受，那句话是从入门到放弃，啊，多么痛的领悟！<br>","more":"<br>下面我来扒一扒：</p>\n<p>官网，那个色调看着很伤眼睛啊，一个docs看下来,我是眼泪往下流啊，hexo的暖色调就像天使，下面放图对比一下</p>\n<p> <img src=\"http://img.blog.csdn.net/20160922102957967\" alt=\"这里写图片描述\"></p>\n<p><img src=\"http://img.blog.csdn.net/20160922103017983\" alt=\"这里写图片描述\"></p>\n<p><strong>如果你自认为眼睛很好，那就继续往下看</strong></p>\n<p>jekyll需要安装ruby,python等，hexo需要nodejs，当然为了push到github都需要装个git,速度上jekyll生成静态站点的速度比hexo慢多了，如果你时间多。</p>\n<p><strong>如果你正好想休息喝杯茶，不在乎慢点，那也请继续往下看</strong></p>\n<p>便捷性，hexo完爆jekyll，同样是quick start，虽然都是几个命令，就可以预览效果了，但是效果差了十万八千里，这个必须上图</p>\n<p><img src=\"http://img.blog.csdn.net/20160922110655751\" alt=\"这里写图片描述\"></p>\n<p><img src=\"http://img.blog.csdn.net/20160922110954153\" alt=\"这里写图片描述\"></p>\n<p> jekyll直接显示个空白页，你没看错，哈哈，hexo我加了个文章，为了让你看到分类功能，其他什么没干，这就是差别</p>\n<p><strong>你竟然看到了这里？看来上面三条对你都是小case，那说明你还没有绝望啊，勇士请继续</strong></p>\n<p>插件和样式，你写完post，想做个categories？对于hexo就是so easy，在你的文章前面的使用category: 分类名，hexo就给你在右边生成，包括分类主页，默认样式，你啥都不用干。而jekyll需要自己写标签语言遍历然后在创建各个分类的主页，在设置页面css，或者用ruby写插件去搞，这下老子要骂娘了，我他妈根本不会ruby啊，官方为什么不主动提供好现成的插件？我只是个后端工程师，不是全栈，页面+css真的玩不来，不知道提供些theme供人选择？</p>\n<p><strong>如果你是个受虐狂，去捣鼓jekyll吧</strong></p>"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n<!--more-->\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ncategories: \n- hexo\ntag: \n- hexo\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n<!--more-->\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2016-09-23T02:08:45.604Z","updated":"2016-09-23T02:08:45.607Z","comments":1,"layout":"post","photos":[],"link":"","_id":"citfd5qc60003vgxsigra2wnq","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.<br><a id=\"more\"></a></p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","excerpt":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.<br>","more":"</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>"},{"title":"数据库事务与锁详解","date":"2016-09-21T16:00:00.000Z","_content":"\n# **什么是事务（Transaction）？**\n是指作为单个逻辑工作单元执行的一系列操作，要么完全地执行，要么完全地不执行。 事务处理可以确保除非事务性单元内的所有操作都成功完成，否则不会永久更新面向数据的资源。通过将一组相关操作组合为一个要么全部成功要么全部失败的单元，可以简化错误恢复并使应用程序更加可靠。一个逻辑工作单元要成为事务，必须满足所谓的ACID（原子性、一致性、隔离性和持久性）属性。事务是数据库运行中的一个逻辑工作单位，由DBMS中的事务管理子系统负责事务的处理。\n<!--more-->\t\n举个例子加深一下理解：同一个银行转账，A转1000块钱给B，这里存在两个操作，一个是A账户扣款1000元，两一个操作是B账户增加1000元，两者就构成了转账这个事务。\n\n- 两个操作都成功，A账户扣款1000元，B账户增加1000元，事务成功\n- 两个操作都失败，A账户和B账户金额都没变，事务失败\n\n最后思考一下，怎么样会出现A账户扣款1000元，B账户金额不变？如果你是把两个操作放在一个事务里面，并且是数据库提供的内在事务支持，那就不会有问题，但是开发人员把两个操作放在两个事务里面，而第二个事务失败就会出现中间状态。现实中自己实现的分布式事务处理不当也会出现中间状态，这并不是事务的错，事务本身就是规定不会出现中间状态，是事务实现者做出来的方案有问题。\n\n# **事务的4个特性**\n- **原子性(Atomic)**：事务必须是原子工作单元；对于其数据修改，要么全都执行，要么全都不执行。通常，与某个事务关联的操作具有共同的目标，并且是相互依赖的。如果系统只执行这些操作的一个子集，则可能会破坏事务的总体目标。原子性消除了系统处理操作子集的可能性。\n\n- **一致性(Consistency)**：事务的一致性指的是在一个事务执行之前和执行之后数据库都必须处于一致性状态。这种特性称为事务的一致性。假如数据库的状态满足所有的完整性约束，就说该数据库是一致的。\n\n- **隔离性(Isolation)**：由并发事务所作的修改必须与任何其它并发事务所作的修改隔离。事务查看数据时数据所处的状态，到底是另一个事务执行之前的状态还是中间某个状态，相互之间存在什么影响，是可以通过隔离级别的设置来控制的。\n\n- **持久性(Durability)**：事务结束后，事务处理的结果必须能够得到固化，即写入数据库文件中即使机器宕机数据也不会丢失，它对于系统的影响是永久性的。\n\n# **事务并发控制**\n我们从另外一个方向来说说，如果不对事务进行并发控制，我们看看数据库并发操作是会有那些异常情形，有些使我们可以接受的，有些是不能接受的，注意这里的异常就是特定语境下的，并不一定就是错误什么的。假设有一个order表，有个字段叫count，作为计数用，当前值为100\n\n- **第一类丢失更新（Update Lost）**：此种更新丢失是因为回滚的原因，所以也叫回滚丢失。此时两个事务同时更新count，两个事务都读取到100，事务一更新成功并提交，count=100+1=101，事务二出于某种原因更新失败了，然后回滚，事务二就把count还原为它一开始读到的100，此时事务一的更新就这样丢失了。\n\n- **脏读（Dirty Read）**：此种异常时因为一个事务读取了另一个事务修改了但是未提交的数据。举个例子，事务一更新了count=101，但是没有提交，事务二此时读取count，值为101而不是100，然后事务一出于某种原因回滚了，然后第二个事务读取的这个值就是噩梦的开始。\n\n- **不可重复读（Not Repeatable Read）**：此种异常是一个事务对同一行数据执行了两次或更多次查询，但是却得到了不同的结果，也就是在一个事务里面你不能重复（即多次）读取一行数据，如果你这么做了，不能保证每次读取的结果是一样的，有可能一样有可能不一样。造成这个结果是在两次查询之间有别的事务对该行数据做了更新操作。举个例子，事务一先查询了count，值为100，此时事务二更新了count=101，事务一再次读取count,值就会变成101，两次读取结果不一样。\n\n- **第二类丢失更新（Second Update Lost）**：此种更新丢失是因为更新被其他事务给覆盖了，也可以叫覆盖丢失。举个例子，两个事务同时更新count，都读取100这个初始值，事务一先更新成功并提交，count=100+1=101，事务二后更新成功并提交，count=100+1=101,由于事务二count还是从100开始增加，事务一的更新就这样丢失了。\n\n- **幻读（Phantom Read）**：幻读和不可重复读有点像，只是针对的不是数据的值而是数据的数量。此种异常是一个事务在两次查询的过程中数据的数量不同，让人以为发生幻觉，幻读大概就是这么得来的吧。举个例子，事务一查询order表有多少条记录，事务二新增了一条记录，然后事务一查了一下order表有多少记录，发现和第一次不一样，这就是幻读。\n\n# **数据库事务隔离级别**\n看到上面提到的几种问题，你可能会想，我擦，这么多坑怎么办啊。其实上面几种情况并不是一定都要避免的，具体看你的业务要求，包括你数据库的负载都会影响你的决定。不知道大家发现没有，上面各种异常情况都是多个事务之间相互影响造成的，这说明两个事务之间需要某种方式将他们从某种程度上分开，降低直至避免相互影响。这时候数据库事务隔离级别就粉墨登场了，而数据库的隔离级别实现一般是通过数据库锁实现的。\n\n- **读未提交（Read Uncommitted）**：该隔离级别指即使一个事务的更新语句没有提交,但是别的事务可以读到这个改变，几种异常情况都可能出现。极易出错，没有安全性可言，基本不会使用。\n\n- **读已提交（Read Committed）**：该隔离级别指一个事务只能看到其他事务的已经提交的更新，看不到未提交的更新，消除了脏读和第一类丢失更新，这是大多数数据库的默认隔离级别，如Oracle,Sqlserver。\n\n- **可重复读（Repeatable Read）**：该隔离级别指一个事务中进行两次或多次同样的对于数据内容的查询，得到的结果是一样的，但不保证对于数据条数的查询是一样的，只要存在读改行数据就禁止写，消除了不可重复读和第二类更新丢失，这是Mysql数据库的默认隔离级别。\n\n- **串行化（Serializable）**：意思是说这个事务执行的时候不允许别的事务并发执行.完全串行化的读，只要存在读就禁止写,但可以同时读，消除了幻读。这是事务隔离的最高级别，虽然最安全最省心，但是效率太低，一般不会用。\n\n#### **下面是各种隔离级别对各异常的控制能力：**\n 级别\\异常 |第一类更新丢失 | 脏读 | 不可重复读 | 第二类丢失更新 | 幻读\n:--: | :--: | :--: | :--: | :--: | :--:\n读未提交|Y|Y|Y|Y|Y\n读已提交|N|N|Y|Y|Y\n可重复读|N|N|N|N|Y\n串行化|N|N|N|N|N\n\n# **数据库锁分类**\n一般可以分为两类，一个是悲观锁，一个是乐观锁，悲观锁一般就是我们通常说的数据库锁机制，乐观锁一般是指用户自己实现的一种锁机制，比如hibernate实现的乐观锁甚至编程语言也有乐观锁的思想的应用。\n\n**悲观锁**：顾名思义，就是很悲观，它对于数据被外界修改持保守态度，认为数据随时会修改，所以整个数据处理中需要将数据加锁。悲观锁一般都是依靠关系数据库提供的锁机制，事实上关系数据库中的行锁，表锁不论是读写锁都是悲观锁。\n\n#### **悲观锁按照使用性质划分：**\n- **共享锁（Share locks简记为S锁）**：也称读锁，事务A对对象T加s锁，其他事务也只能对T加S，多个事务可以同时读，但不能有写操作，直到A释放S锁。\n\n- **排它锁（Exclusivelocks简记为X锁）**：也称写锁，事务A对对象T加X锁以后，其他事务不能对T加任何锁，只有事务A可以读写对象T直到A释放X锁。\n\n- **更新锁（简记为U锁）**：用来预定要对此对象施加X锁，它允许其他事务读，但不允许再施加U锁或X锁；当被读取的对象将要被更新时，则升级为X锁，主要是用来防止死锁的。因为使用共享锁时，修改数据的操作分为两步，首先获得一个共享锁，读取数据，然后将共享锁升级为排它锁，然后再执行修改操作。这样如果同时有两个或多个事务同时对一个对象申请了共享锁，在修改数据的时候，这些事务都要将共享锁升级为排它锁。这些事务都不会释放共享锁而是一直等待对方释放，这样就造成了死锁。如果一个数据在修改前直接申请更新锁，在数据修改的时候再升级为排它锁，就可以避免死锁。\n\n#### **悲观锁按照作用范围划分：**\n- **行锁**：锁的作用范围是行级别，数据库能够确定那些行需要锁的情况下使用行锁，如果不知道会影响哪些行的时候就会使用表锁。举个例子，一个用户表user，有主键id和用户生日birthday当你使用update ... where id=?这样的语句数据库明确知道会影响哪一行，它就会使用行锁，当你使用update ... where birthday=?这样的的语句的时候因为事先不知道会影响哪些行就可能会使用表锁。\n- **表锁**：锁的作用范围是整张表。\n\n**乐观锁**：顾名思义，就是很乐观，每次自己操作数据的时候认为没有人回来修改它，所以不去加锁，但是在更新的时候会去判断在此期间数据有没有被修改，需要用户自己去实现。既然都有数据库提供的悲观锁可以方便使用为什么要使用乐观锁呢？对于读操作远多于写操作的时候，大多数都是读取，这时候一个更新操作加锁会阻塞所有读取，降低了吞吐量。最后还要释放锁，锁是需要一些开销的，我们只要想办法解决极少量的更新操作的同步问题。换句话说，如果是读写比例差距不是非常大或者你的系统没有响应不及时，吞吐量瓶颈问题，那就不要去使用乐观锁，它增加了复杂度，也带来了额外的风险。\n\n#### **乐观锁实现方式：**\n- **版本号（记为version）**：就是给数据增加一个版本标识，在数据库上就是表中增加一个version字段，每次更新把这个字段加1，读取数据的时候把version读出来，更新的时候比较version，如果还是开始读取的version就可以更新了，如果现在的version比老的version大，说明有其他事务更新了该数据，并增加了版本号，这时候得到一个无法更新的通知，用户自行根据这个通知来决定怎么处理，比如重新开始一遍。这里的关键是判断version和更新两个动作需要作为一个原子单元执行，否则在你判断可以更新以后正式更新之前有别的事务修改了version，这个时候你再去更新就可能会覆盖前一个事务做的更新，造成第二类丢失更新，所以你可以使用update ... where ... and version=\"old version\"这样的语句，根据返回结果是0还是非0来得到通知，如果是0说明更新没有成功，因为version被改了，如果返回非0说明更新成功。\n- **时间戳（timestamp）**：和版本号基本一样，只是通过时间戳来判断而已，注意时间戳要使用数据库服务器的时间戳不能是业务系统的时间。\n- **待更新字段**：和版本号方式相似，只是不增加额外字段，直接使用有效数据字段做版本控制信息，因为有时候我们可能无法改变旧系统的数据库表结构。假设有个待更新字段叫count,先去读取这个count,更新的时候去比较数据库中count的值是不是我期望的值（即开始读的值），如果是就把我修改的count的值更新到该字段，否则更新失败。java的基本类型的原子类型对象如AtomicInteger就是这种思想。\n-  **所有字段**：和待更新字段类似，只是使用所有字段做版本控制信息，只有所有字段都没变化才会执行更新。\n\n #### **乐观锁几种方式的区别：**\n新系统设计可以使用version方式和timestamp方式，需要增加字段，应用范围是整条数据，不论那个字段修改都会更新version,也就是说两个事务更新同一条记录的两个不相关字段也是互斥的，不能同步进行。旧系统不能修改数据库表结构的时候使用数据字段作为版本控制信息，不需要新增字段，待更新字段方式只要其他事务修改的字段和当前事务修改的字段没有重叠就可以同步进行，并发性更高。\n\n# **mysql事务隔离级别实战**\n实践是检验真理的唯一标准，掌握上面的理论之后，我们在数据库上实战一番家里更好地掌握也加深理解，同时有助于解决实际问题。不同数据库很多实现可能不同，这里以mysql为例讲解各种隔离级别下的情况，测试表为user（id,name,gender,passwd,email）。\n\n#### **隔离级别：read-uncommitted**\n脏读测试流程：\n1. A设置隔离级别为read-uncommitted（注意这里未声明都是session级别，而非全局的），开启事务，查询id=1的记录\n2. B设置隔离级别为read-uncommitted,开启事务，修改id=1的记录，但不提交\n3. A再次查询id=1的记录，和第一次查询的比较一下\n4. B事务回滚，A事务回滚。\n\nA:\n\n![这里写图片描述](http://img.blog.csdn.net/20160908174428502)\n\nB：\n\n![这里写图片描述](http://img.blog.csdn.net/20160908174443940)\n\n结论：A读到了B没有提交的内容，隔离级别为read-uncommitted的时候出现脏读。\n\n第一类更新丢失测试流程：\n1. A设置隔离级别为read-uncommitted，开启事务，查询id=1的记录\n2. B设置隔离级别为read-uncommitted，开启事务,查询id=1的记录\n3. A修改id=1的记录\n4. B修改id=1的记录\n5. A提交\n6. B回滚\n7. A在查询一次id=1的记录，看看自己的修改是否成功\n\n结论：结果不如我所想的，A的更新成功了，为什么呢？A执行update语句的时候对该条记录加锁了，B这时候根本无法修改直至超时，也就是至少在mysql中在read-uncommitted隔离级别下验证第一类丢失更新，据了解有的数据库好像可以设置不加锁，如果能够不加锁的话则可以实现，也贴一下图吧。\n\nA：\n\n![这里写图片描述](http://img.blog.csdn.net/20160920181141520)\n\nB：\n\n![这里写图片描述](http://img.blog.csdn.net/20160920181155270)\n\n不可重复读测试流程（省略）：\n\n结论：流程和测试脏读一样，其实在第一次测试脏读的时候就可以发现会出现不可重复读，A两次读取id=1的数据内容不同。\n\n第二类丢失更新流程：\n1. A开启事务，查询order_id=1的记录\n2. B开启事务，查询order_id=1的记录\n3. A把查出来的count加1后更新\n4. B把查出来的count加1更新\n5. A提交，B也提交 \n\nA:\n\n![这里写图片描述](http://img.blog.csdn.net/20160908225746594)\n\nB:\n\n![这里写图片描述](http://img.blog.csdn.net/20160908225809188)\n\n结论：A的更新丢失，我们希望的结果是3，而实际结果是2，跟java的多线程很像对不对，read-uncommitted隔离模式下会出现第二类丢失更新。\n\n幻读测试流程：\n1. A开启事务，查询user表所有数据\n2. B开启事务，新增一条记录\n3. A再次查询user表所有记录，和第一次作比对\n4. A回滚，B回滚\n\nA:\n\n![这里写图片描述](http://img.blog.csdn.net/20160908184536389)\n\nB:\n\n![这里写图片描述](http://img.blog.csdn.net/20160908184547579)\n\n结论：A两次查询全表数据结果不同，read-uncommitted隔离模式下会出现幻读。\n\n注：因为后面对这几种异常情况的测试流程基本和上面一样，个别有些差别读者自己注意，另外注意更改隔离级别即可，就能看到对应结果，后面的我只给出进一步能解决的异常测试截图,结论可以参照前面的对照表。\n\n#### **隔离级别：read-committed**\n##### 脏读测试截图\n\nA:\n\n![这里写图片描述](http://img.blog.csdn.net/20160908231058914)\nB：\n\n![这里写图片描述](http://img.blog.csdn.net/20160908231121539)\n\n结论：A没有读到B没有提交的内容，隔离级别为read-committed的时候不会出现脏读。\n\n#### **隔离级别：repeatable-read**\n##### 不可重复读测试截图\n\nA:\n\n![这里写图片描述](http://img.blog.csdn.net/20160908233613781)\n\nB：\n\n![这里写图片描述](http://img.blog.csdn.net/20160908233628156)\n\n结论：A两次读取id=1的数据内容相同，repeatable-read隔离模式下不会出现不可重复读。\n\n#### **隔离级别：Serializable**\n##### 幻读测试截图\n\nA:\n\n![这里写图片描述](http://img.blog.csdn.net/20160908235618573)\n\nB：\n\n![这里写图片描述](http://img.blog.csdn.net/20160909000404537)\n\n结论：因为A事务未提交之前，B事务插入操作无法获得锁而超时，Serializable隔离模式下不会出现幻读。\n\n\n\n\n","source":"_posts/数据库事务与锁详解.md","raw":"---\ntitle: 数据库事务与锁详解\ndate: 2016-09-22\ntags:\n- 事务\n- 数据库锁\ncategories:\n- 数据库\n- 事务\n---\n\n# **什么是事务（Transaction）？**\n是指作为单个逻辑工作单元执行的一系列操作，要么完全地执行，要么完全地不执行。 事务处理可以确保除非事务性单元内的所有操作都成功完成，否则不会永久更新面向数据的资源。通过将一组相关操作组合为一个要么全部成功要么全部失败的单元，可以简化错误恢复并使应用程序更加可靠。一个逻辑工作单元要成为事务，必须满足所谓的ACID（原子性、一致性、隔离性和持久性）属性。事务是数据库运行中的一个逻辑工作单位，由DBMS中的事务管理子系统负责事务的处理。\n<!--more-->\t\n举个例子加深一下理解：同一个银行转账，A转1000块钱给B，这里存在两个操作，一个是A账户扣款1000元，两一个操作是B账户增加1000元，两者就构成了转账这个事务。\n\n- 两个操作都成功，A账户扣款1000元，B账户增加1000元，事务成功\n- 两个操作都失败，A账户和B账户金额都没变，事务失败\n\n最后思考一下，怎么样会出现A账户扣款1000元，B账户金额不变？如果你是把两个操作放在一个事务里面，并且是数据库提供的内在事务支持，那就不会有问题，但是开发人员把两个操作放在两个事务里面，而第二个事务失败就会出现中间状态。现实中自己实现的分布式事务处理不当也会出现中间状态，这并不是事务的错，事务本身就是规定不会出现中间状态，是事务实现者做出来的方案有问题。\n\n# **事务的4个特性**\n- **原子性(Atomic)**：事务必须是原子工作单元；对于其数据修改，要么全都执行，要么全都不执行。通常，与某个事务关联的操作具有共同的目标，并且是相互依赖的。如果系统只执行这些操作的一个子集，则可能会破坏事务的总体目标。原子性消除了系统处理操作子集的可能性。\n\n- **一致性(Consistency)**：事务的一致性指的是在一个事务执行之前和执行之后数据库都必须处于一致性状态。这种特性称为事务的一致性。假如数据库的状态满足所有的完整性约束，就说该数据库是一致的。\n\n- **隔离性(Isolation)**：由并发事务所作的修改必须与任何其它并发事务所作的修改隔离。事务查看数据时数据所处的状态，到底是另一个事务执行之前的状态还是中间某个状态，相互之间存在什么影响，是可以通过隔离级别的设置来控制的。\n\n- **持久性(Durability)**：事务结束后，事务处理的结果必须能够得到固化，即写入数据库文件中即使机器宕机数据也不会丢失，它对于系统的影响是永久性的。\n\n# **事务并发控制**\n我们从另外一个方向来说说，如果不对事务进行并发控制，我们看看数据库并发操作是会有那些异常情形，有些使我们可以接受的，有些是不能接受的，注意这里的异常就是特定语境下的，并不一定就是错误什么的。假设有一个order表，有个字段叫count，作为计数用，当前值为100\n\n- **第一类丢失更新（Update Lost）**：此种更新丢失是因为回滚的原因，所以也叫回滚丢失。此时两个事务同时更新count，两个事务都读取到100，事务一更新成功并提交，count=100+1=101，事务二出于某种原因更新失败了，然后回滚，事务二就把count还原为它一开始读到的100，此时事务一的更新就这样丢失了。\n\n- **脏读（Dirty Read）**：此种异常时因为一个事务读取了另一个事务修改了但是未提交的数据。举个例子，事务一更新了count=101，但是没有提交，事务二此时读取count，值为101而不是100，然后事务一出于某种原因回滚了，然后第二个事务读取的这个值就是噩梦的开始。\n\n- **不可重复读（Not Repeatable Read）**：此种异常是一个事务对同一行数据执行了两次或更多次查询，但是却得到了不同的结果，也就是在一个事务里面你不能重复（即多次）读取一行数据，如果你这么做了，不能保证每次读取的结果是一样的，有可能一样有可能不一样。造成这个结果是在两次查询之间有别的事务对该行数据做了更新操作。举个例子，事务一先查询了count，值为100，此时事务二更新了count=101，事务一再次读取count,值就会变成101，两次读取结果不一样。\n\n- **第二类丢失更新（Second Update Lost）**：此种更新丢失是因为更新被其他事务给覆盖了，也可以叫覆盖丢失。举个例子，两个事务同时更新count，都读取100这个初始值，事务一先更新成功并提交，count=100+1=101，事务二后更新成功并提交，count=100+1=101,由于事务二count还是从100开始增加，事务一的更新就这样丢失了。\n\n- **幻读（Phantom Read）**：幻读和不可重复读有点像，只是针对的不是数据的值而是数据的数量。此种异常是一个事务在两次查询的过程中数据的数量不同，让人以为发生幻觉，幻读大概就是这么得来的吧。举个例子，事务一查询order表有多少条记录，事务二新增了一条记录，然后事务一查了一下order表有多少记录，发现和第一次不一样，这就是幻读。\n\n# **数据库事务隔离级别**\n看到上面提到的几种问题，你可能会想，我擦，这么多坑怎么办啊。其实上面几种情况并不是一定都要避免的，具体看你的业务要求，包括你数据库的负载都会影响你的决定。不知道大家发现没有，上面各种异常情况都是多个事务之间相互影响造成的，这说明两个事务之间需要某种方式将他们从某种程度上分开，降低直至避免相互影响。这时候数据库事务隔离级别就粉墨登场了，而数据库的隔离级别实现一般是通过数据库锁实现的。\n\n- **读未提交（Read Uncommitted）**：该隔离级别指即使一个事务的更新语句没有提交,但是别的事务可以读到这个改变，几种异常情况都可能出现。极易出错，没有安全性可言，基本不会使用。\n\n- **读已提交（Read Committed）**：该隔离级别指一个事务只能看到其他事务的已经提交的更新，看不到未提交的更新，消除了脏读和第一类丢失更新，这是大多数数据库的默认隔离级别，如Oracle,Sqlserver。\n\n- **可重复读（Repeatable Read）**：该隔离级别指一个事务中进行两次或多次同样的对于数据内容的查询，得到的结果是一样的，但不保证对于数据条数的查询是一样的，只要存在读改行数据就禁止写，消除了不可重复读和第二类更新丢失，这是Mysql数据库的默认隔离级别。\n\n- **串行化（Serializable）**：意思是说这个事务执行的时候不允许别的事务并发执行.完全串行化的读，只要存在读就禁止写,但可以同时读，消除了幻读。这是事务隔离的最高级别，虽然最安全最省心，但是效率太低，一般不会用。\n\n#### **下面是各种隔离级别对各异常的控制能力：**\n 级别\\异常 |第一类更新丢失 | 脏读 | 不可重复读 | 第二类丢失更新 | 幻读\n:--: | :--: | :--: | :--: | :--: | :--:\n读未提交|Y|Y|Y|Y|Y\n读已提交|N|N|Y|Y|Y\n可重复读|N|N|N|N|Y\n串行化|N|N|N|N|N\n\n# **数据库锁分类**\n一般可以分为两类，一个是悲观锁，一个是乐观锁，悲观锁一般就是我们通常说的数据库锁机制，乐观锁一般是指用户自己实现的一种锁机制，比如hibernate实现的乐观锁甚至编程语言也有乐观锁的思想的应用。\n\n**悲观锁**：顾名思义，就是很悲观，它对于数据被外界修改持保守态度，认为数据随时会修改，所以整个数据处理中需要将数据加锁。悲观锁一般都是依靠关系数据库提供的锁机制，事实上关系数据库中的行锁，表锁不论是读写锁都是悲观锁。\n\n#### **悲观锁按照使用性质划分：**\n- **共享锁（Share locks简记为S锁）**：也称读锁，事务A对对象T加s锁，其他事务也只能对T加S，多个事务可以同时读，但不能有写操作，直到A释放S锁。\n\n- **排它锁（Exclusivelocks简记为X锁）**：也称写锁，事务A对对象T加X锁以后，其他事务不能对T加任何锁，只有事务A可以读写对象T直到A释放X锁。\n\n- **更新锁（简记为U锁）**：用来预定要对此对象施加X锁，它允许其他事务读，但不允许再施加U锁或X锁；当被读取的对象将要被更新时，则升级为X锁，主要是用来防止死锁的。因为使用共享锁时，修改数据的操作分为两步，首先获得一个共享锁，读取数据，然后将共享锁升级为排它锁，然后再执行修改操作。这样如果同时有两个或多个事务同时对一个对象申请了共享锁，在修改数据的时候，这些事务都要将共享锁升级为排它锁。这些事务都不会释放共享锁而是一直等待对方释放，这样就造成了死锁。如果一个数据在修改前直接申请更新锁，在数据修改的时候再升级为排它锁，就可以避免死锁。\n\n#### **悲观锁按照作用范围划分：**\n- **行锁**：锁的作用范围是行级别，数据库能够确定那些行需要锁的情况下使用行锁，如果不知道会影响哪些行的时候就会使用表锁。举个例子，一个用户表user，有主键id和用户生日birthday当你使用update ... where id=?这样的语句数据库明确知道会影响哪一行，它就会使用行锁，当你使用update ... where birthday=?这样的的语句的时候因为事先不知道会影响哪些行就可能会使用表锁。\n- **表锁**：锁的作用范围是整张表。\n\n**乐观锁**：顾名思义，就是很乐观，每次自己操作数据的时候认为没有人回来修改它，所以不去加锁，但是在更新的时候会去判断在此期间数据有没有被修改，需要用户自己去实现。既然都有数据库提供的悲观锁可以方便使用为什么要使用乐观锁呢？对于读操作远多于写操作的时候，大多数都是读取，这时候一个更新操作加锁会阻塞所有读取，降低了吞吐量。最后还要释放锁，锁是需要一些开销的，我们只要想办法解决极少量的更新操作的同步问题。换句话说，如果是读写比例差距不是非常大或者你的系统没有响应不及时，吞吐量瓶颈问题，那就不要去使用乐观锁，它增加了复杂度，也带来了额外的风险。\n\n#### **乐观锁实现方式：**\n- **版本号（记为version）**：就是给数据增加一个版本标识，在数据库上就是表中增加一个version字段，每次更新把这个字段加1，读取数据的时候把version读出来，更新的时候比较version，如果还是开始读取的version就可以更新了，如果现在的version比老的version大，说明有其他事务更新了该数据，并增加了版本号，这时候得到一个无法更新的通知，用户自行根据这个通知来决定怎么处理，比如重新开始一遍。这里的关键是判断version和更新两个动作需要作为一个原子单元执行，否则在你判断可以更新以后正式更新之前有别的事务修改了version，这个时候你再去更新就可能会覆盖前一个事务做的更新，造成第二类丢失更新，所以你可以使用update ... where ... and version=\"old version\"这样的语句，根据返回结果是0还是非0来得到通知，如果是0说明更新没有成功，因为version被改了，如果返回非0说明更新成功。\n- **时间戳（timestamp）**：和版本号基本一样，只是通过时间戳来判断而已，注意时间戳要使用数据库服务器的时间戳不能是业务系统的时间。\n- **待更新字段**：和版本号方式相似，只是不增加额外字段，直接使用有效数据字段做版本控制信息，因为有时候我们可能无法改变旧系统的数据库表结构。假设有个待更新字段叫count,先去读取这个count,更新的时候去比较数据库中count的值是不是我期望的值（即开始读的值），如果是就把我修改的count的值更新到该字段，否则更新失败。java的基本类型的原子类型对象如AtomicInteger就是这种思想。\n-  **所有字段**：和待更新字段类似，只是使用所有字段做版本控制信息，只有所有字段都没变化才会执行更新。\n\n #### **乐观锁几种方式的区别：**\n新系统设计可以使用version方式和timestamp方式，需要增加字段，应用范围是整条数据，不论那个字段修改都会更新version,也就是说两个事务更新同一条记录的两个不相关字段也是互斥的，不能同步进行。旧系统不能修改数据库表结构的时候使用数据字段作为版本控制信息，不需要新增字段，待更新字段方式只要其他事务修改的字段和当前事务修改的字段没有重叠就可以同步进行，并发性更高。\n\n# **mysql事务隔离级别实战**\n实践是检验真理的唯一标准，掌握上面的理论之后，我们在数据库上实战一番家里更好地掌握也加深理解，同时有助于解决实际问题。不同数据库很多实现可能不同，这里以mysql为例讲解各种隔离级别下的情况，测试表为user（id,name,gender,passwd,email）。\n\n#### **隔离级别：read-uncommitted**\n脏读测试流程：\n1. A设置隔离级别为read-uncommitted（注意这里未声明都是session级别，而非全局的），开启事务，查询id=1的记录\n2. B设置隔离级别为read-uncommitted,开启事务，修改id=1的记录，但不提交\n3. A再次查询id=1的记录，和第一次查询的比较一下\n4. B事务回滚，A事务回滚。\n\nA:\n\n![这里写图片描述](http://img.blog.csdn.net/20160908174428502)\n\nB：\n\n![这里写图片描述](http://img.blog.csdn.net/20160908174443940)\n\n结论：A读到了B没有提交的内容，隔离级别为read-uncommitted的时候出现脏读。\n\n第一类更新丢失测试流程：\n1. A设置隔离级别为read-uncommitted，开启事务，查询id=1的记录\n2. B设置隔离级别为read-uncommitted，开启事务,查询id=1的记录\n3. A修改id=1的记录\n4. B修改id=1的记录\n5. A提交\n6. B回滚\n7. A在查询一次id=1的记录，看看自己的修改是否成功\n\n结论：结果不如我所想的，A的更新成功了，为什么呢？A执行update语句的时候对该条记录加锁了，B这时候根本无法修改直至超时，也就是至少在mysql中在read-uncommitted隔离级别下验证第一类丢失更新，据了解有的数据库好像可以设置不加锁，如果能够不加锁的话则可以实现，也贴一下图吧。\n\nA：\n\n![这里写图片描述](http://img.blog.csdn.net/20160920181141520)\n\nB：\n\n![这里写图片描述](http://img.blog.csdn.net/20160920181155270)\n\n不可重复读测试流程（省略）：\n\n结论：流程和测试脏读一样，其实在第一次测试脏读的时候就可以发现会出现不可重复读，A两次读取id=1的数据内容不同。\n\n第二类丢失更新流程：\n1. A开启事务，查询order_id=1的记录\n2. B开启事务，查询order_id=1的记录\n3. A把查出来的count加1后更新\n4. B把查出来的count加1更新\n5. A提交，B也提交 \n\nA:\n\n![这里写图片描述](http://img.blog.csdn.net/20160908225746594)\n\nB:\n\n![这里写图片描述](http://img.blog.csdn.net/20160908225809188)\n\n结论：A的更新丢失，我们希望的结果是3，而实际结果是2，跟java的多线程很像对不对，read-uncommitted隔离模式下会出现第二类丢失更新。\n\n幻读测试流程：\n1. A开启事务，查询user表所有数据\n2. B开启事务，新增一条记录\n3. A再次查询user表所有记录，和第一次作比对\n4. A回滚，B回滚\n\nA:\n\n![这里写图片描述](http://img.blog.csdn.net/20160908184536389)\n\nB:\n\n![这里写图片描述](http://img.blog.csdn.net/20160908184547579)\n\n结论：A两次查询全表数据结果不同，read-uncommitted隔离模式下会出现幻读。\n\n注：因为后面对这几种异常情况的测试流程基本和上面一样，个别有些差别读者自己注意，另外注意更改隔离级别即可，就能看到对应结果，后面的我只给出进一步能解决的异常测试截图,结论可以参照前面的对照表。\n\n#### **隔离级别：read-committed**\n##### 脏读测试截图\n\nA:\n\n![这里写图片描述](http://img.blog.csdn.net/20160908231058914)\nB：\n\n![这里写图片描述](http://img.blog.csdn.net/20160908231121539)\n\n结论：A没有读到B没有提交的内容，隔离级别为read-committed的时候不会出现脏读。\n\n#### **隔离级别：repeatable-read**\n##### 不可重复读测试截图\n\nA:\n\n![这里写图片描述](http://img.blog.csdn.net/20160908233613781)\n\nB：\n\n![这里写图片描述](http://img.blog.csdn.net/20160908233628156)\n\n结论：A两次读取id=1的数据内容相同，repeatable-read隔离模式下不会出现不可重复读。\n\n#### **隔离级别：Serializable**\n##### 幻读测试截图\n\nA:\n\n![这里写图片描述](http://img.blog.csdn.net/20160908235618573)\n\nB：\n\n![这里写图片描述](http://img.blog.csdn.net/20160909000404537)\n\n结论：因为A事务未提交之前，B事务插入操作无法获得锁而超时，Serializable隔离模式下不会出现幻读。\n\n\n\n\n","slug":"数据库事务与锁详解","published":1,"updated":"2016-09-23T02:08:45.613Z","comments":1,"layout":"post","photos":[],"link":"","_id":"citfd5qcf0007vgxs19v7629q","content":"<h1 id=\"什么是事务（Transaction）？\"><a href=\"#什么是事务（Transaction）？\" class=\"headerlink\" title=\"什么是事务（Transaction）？\"></a><strong>什么是事务（Transaction）？</strong></h1><p>是指作为单个逻辑工作单元执行的一系列操作，要么完全地执行，要么完全地不执行。 事务处理可以确保除非事务性单元内的所有操作都成功完成，否则不会永久更新面向数据的资源。通过将一组相关操作组合为一个要么全部成功要么全部失败的单元，可以简化错误恢复并使应用程序更加可靠。一个逻辑工作单元要成为事务，必须满足所谓的ACID（原子性、一致性、隔离性和持久性）属性。事务是数据库运行中的一个逻辑工作单位，由DBMS中的事务管理子系统负责事务的处理。<br><a id=\"more\"></a><br>举个例子加深一下理解：同一个银行转账，A转1000块钱给B，这里存在两个操作，一个是A账户扣款1000元，两一个操作是B账户增加1000元，两者就构成了转账这个事务。</p>\n<ul>\n<li>两个操作都成功，A账户扣款1000元，B账户增加1000元，事务成功</li>\n<li>两个操作都失败，A账户和B账户金额都没变，事务失败</li>\n</ul>\n<p>最后思考一下，怎么样会出现A账户扣款1000元，B账户金额不变？如果你是把两个操作放在一个事务里面，并且是数据库提供的内在事务支持，那就不会有问题，但是开发人员把两个操作放在两个事务里面，而第二个事务失败就会出现中间状态。现实中自己实现的分布式事务处理不当也会出现中间状态，这并不是事务的错，事务本身就是规定不会出现中间状态，是事务实现者做出来的方案有问题。</p>\n<h1 id=\"事务的4个特性\"><a href=\"#事务的4个特性\" class=\"headerlink\" title=\"事务的4个特性\"></a><strong>事务的4个特性</strong></h1><ul>\n<li><p><strong>原子性(Atomic)</strong>：事务必须是原子工作单元；对于其数据修改，要么全都执行，要么全都不执行。通常，与某个事务关联的操作具有共同的目标，并且是相互依赖的。如果系统只执行这些操作的一个子集，则可能会破坏事务的总体目标。原子性消除了系统处理操作子集的可能性。</p>\n</li>\n<li><p><strong>一致性(Consistency)</strong>：事务的一致性指的是在一个事务执行之前和执行之后数据库都必须处于一致性状态。这种特性称为事务的一致性。假如数据库的状态满足所有的完整性约束，就说该数据库是一致的。</p>\n</li>\n<li><p><strong>隔离性(Isolation)</strong>：由并发事务所作的修改必须与任何其它并发事务所作的修改隔离。事务查看数据时数据所处的状态，到底是另一个事务执行之前的状态还是中间某个状态，相互之间存在什么影响，是可以通过隔离级别的设置来控制的。</p>\n</li>\n<li><p><strong>持久性(Durability)</strong>：事务结束后，事务处理的结果必须能够得到固化，即写入数据库文件中即使机器宕机数据也不会丢失，它对于系统的影响是永久性的。</p>\n</li>\n</ul>\n<h1 id=\"事务并发控制\"><a href=\"#事务并发控制\" class=\"headerlink\" title=\"事务并发控制\"></a><strong>事务并发控制</strong></h1><p>我们从另外一个方向来说说，如果不对事务进行并发控制，我们看看数据库并发操作是会有那些异常情形，有些使我们可以接受的，有些是不能接受的，注意这里的异常就是特定语境下的，并不一定就是错误什么的。假设有一个order表，有个字段叫count，作为计数用，当前值为100</p>\n<ul>\n<li><p><strong>第一类丢失更新（Update Lost）</strong>：此种更新丢失是因为回滚的原因，所以也叫回滚丢失。此时两个事务同时更新count，两个事务都读取到100，事务一更新成功并提交，count=100+1=101，事务二出于某种原因更新失败了，然后回滚，事务二就把count还原为它一开始读到的100，此时事务一的更新就这样丢失了。</p>\n</li>\n<li><p><strong>脏读（Dirty Read）</strong>：此种异常时因为一个事务读取了另一个事务修改了但是未提交的数据。举个例子，事务一更新了count=101，但是没有提交，事务二此时读取count，值为101而不是100，然后事务一出于某种原因回滚了，然后第二个事务读取的这个值就是噩梦的开始。</p>\n</li>\n<li><p><strong>不可重复读（Not Repeatable Read）</strong>：此种异常是一个事务对同一行数据执行了两次或更多次查询，但是却得到了不同的结果，也就是在一个事务里面你不能重复（即多次）读取一行数据，如果你这么做了，不能保证每次读取的结果是一样的，有可能一样有可能不一样。造成这个结果是在两次查询之间有别的事务对该行数据做了更新操作。举个例子，事务一先查询了count，值为100，此时事务二更新了count=101，事务一再次读取count,值就会变成101，两次读取结果不一样。</p>\n</li>\n<li><p><strong>第二类丢失更新（Second Update Lost）</strong>：此种更新丢失是因为更新被其他事务给覆盖了，也可以叫覆盖丢失。举个例子，两个事务同时更新count，都读取100这个初始值，事务一先更新成功并提交，count=100+1=101，事务二后更新成功并提交，count=100+1=101,由于事务二count还是从100开始增加，事务一的更新就这样丢失了。</p>\n</li>\n<li><p><strong>幻读（Phantom Read）</strong>：幻读和不可重复读有点像，只是针对的不是数据的值而是数据的数量。此种异常是一个事务在两次查询的过程中数据的数量不同，让人以为发生幻觉，幻读大概就是这么得来的吧。举个例子，事务一查询order表有多少条记录，事务二新增了一条记录，然后事务一查了一下order表有多少记录，发现和第一次不一样，这就是幻读。</p>\n</li>\n</ul>\n<h1 id=\"数据库事务隔离级别\"><a href=\"#数据库事务隔离级别\" class=\"headerlink\" title=\"数据库事务隔离级别\"></a><strong>数据库事务隔离级别</strong></h1><p>看到上面提到的几种问题，你可能会想，我擦，这么多坑怎么办啊。其实上面几种情况并不是一定都要避免的，具体看你的业务要求，包括你数据库的负载都会影响你的决定。不知道大家发现没有，上面各种异常情况都是多个事务之间相互影响造成的，这说明两个事务之间需要某种方式将他们从某种程度上分开，降低直至避免相互影响。这时候数据库事务隔离级别就粉墨登场了，而数据库的隔离级别实现一般是通过数据库锁实现的。</p>\n<ul>\n<li><p><strong>读未提交（Read Uncommitted）</strong>：该隔离级别指即使一个事务的更新语句没有提交,但是别的事务可以读到这个改变，几种异常情况都可能出现。极易出错，没有安全性可言，基本不会使用。</p>\n</li>\n<li><p><strong>读已提交（Read Committed）</strong>：该隔离级别指一个事务只能看到其他事务的已经提交的更新，看不到未提交的更新，消除了脏读和第一类丢失更新，这是大多数数据库的默认隔离级别，如Oracle,Sqlserver。</p>\n</li>\n<li><p><strong>可重复读（Repeatable Read）</strong>：该隔离级别指一个事务中进行两次或多次同样的对于数据内容的查询，得到的结果是一样的，但不保证对于数据条数的查询是一样的，只要存在读改行数据就禁止写，消除了不可重复读和第二类更新丢失，这是Mysql数据库的默认隔离级别。</p>\n</li>\n<li><p><strong>串行化（Serializable）</strong>：意思是说这个事务执行的时候不允许别的事务并发执行.完全串行化的读，只要存在读就禁止写,但可以同时读，消除了幻读。这是事务隔离的最高级别，虽然最安全最省心，但是效率太低，一般不会用。</p>\n</li>\n</ul>\n<h4 id=\"下面是各种隔离级别对各异常的控制能力：\"><a href=\"#下面是各种隔离级别对各异常的控制能力：\" class=\"headerlink\" title=\"下面是各种隔离级别对各异常的控制能力：\"></a><strong>下面是各种隔离级别对各异常的控制能力：</strong></h4><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">级别\\异常</th>\n<th style=\"text-align:center\">第一类更新丢失</th>\n<th style=\"text-align:center\">脏读</th>\n<th style=\"text-align:center\">不可重复读</th>\n<th style=\"text-align:center\">第二类丢失更新</th>\n<th style=\"text-align:center\">幻读</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">读未提交</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">Y</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">读已提交</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">Y</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">可重复读</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">Y</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">串行化</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">N</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"数据库锁分类\"><a href=\"#数据库锁分类\" class=\"headerlink\" title=\"数据库锁分类\"></a><strong>数据库锁分类</strong></h1><p>一般可以分为两类，一个是悲观锁，一个是乐观锁，悲观锁一般就是我们通常说的数据库锁机制，乐观锁一般是指用户自己实现的一种锁机制，比如hibernate实现的乐观锁甚至编程语言也有乐观锁的思想的应用。</p>\n<p><strong>悲观锁</strong>：顾名思义，就是很悲观，它对于数据被外界修改持保守态度，认为数据随时会修改，所以整个数据处理中需要将数据加锁。悲观锁一般都是依靠关系数据库提供的锁机制，事实上关系数据库中的行锁，表锁不论是读写锁都是悲观锁。</p>\n<h4 id=\"悲观锁按照使用性质划分：\"><a href=\"#悲观锁按照使用性质划分：\" class=\"headerlink\" title=\"悲观锁按照使用性质划分：\"></a><strong>悲观锁按照使用性质划分：</strong></h4><ul>\n<li><p><strong>共享锁（Share locks简记为S锁）</strong>：也称读锁，事务A对对象T加s锁，其他事务也只能对T加S，多个事务可以同时读，但不能有写操作，直到A释放S锁。</p>\n</li>\n<li><p><strong>排它锁（Exclusivelocks简记为X锁）</strong>：也称写锁，事务A对对象T加X锁以后，其他事务不能对T加任何锁，只有事务A可以读写对象T直到A释放X锁。</p>\n</li>\n<li><p><strong>更新锁（简记为U锁）</strong>：用来预定要对此对象施加X锁，它允许其他事务读，但不允许再施加U锁或X锁；当被读取的对象将要被更新时，则升级为X锁，主要是用来防止死锁的。因为使用共享锁时，修改数据的操作分为两步，首先获得一个共享锁，读取数据，然后将共享锁升级为排它锁，然后再执行修改操作。这样如果同时有两个或多个事务同时对一个对象申请了共享锁，在修改数据的时候，这些事务都要将共享锁升级为排它锁。这些事务都不会释放共享锁而是一直等待对方释放，这样就造成了死锁。如果一个数据在修改前直接申请更新锁，在数据修改的时候再升级为排它锁，就可以避免死锁。</p>\n</li>\n</ul>\n<h4 id=\"悲观锁按照作用范围划分：\"><a href=\"#悲观锁按照作用范围划分：\" class=\"headerlink\" title=\"悲观锁按照作用范围划分：\"></a><strong>悲观锁按照作用范围划分：</strong></h4><ul>\n<li><strong>行锁</strong>：锁的作用范围是行级别，数据库能够确定那些行需要锁的情况下使用行锁，如果不知道会影响哪些行的时候就会使用表锁。举个例子，一个用户表user，有主键id和用户生日birthday当你使用update … where id=?这样的语句数据库明确知道会影响哪一行，它就会使用行锁，当你使用update … where birthday=?这样的的语句的时候因为事先不知道会影响哪些行就可能会使用表锁。</li>\n<li><strong>表锁</strong>：锁的作用范围是整张表。</li>\n</ul>\n<p><strong>乐观锁</strong>：顾名思义，就是很乐观，每次自己操作数据的时候认为没有人回来修改它，所以不去加锁，但是在更新的时候会去判断在此期间数据有没有被修改，需要用户自己去实现。既然都有数据库提供的悲观锁可以方便使用为什么要使用乐观锁呢？对于读操作远多于写操作的时候，大多数都是读取，这时候一个更新操作加锁会阻塞所有读取，降低了吞吐量。最后还要释放锁，锁是需要一些开销的，我们只要想办法解决极少量的更新操作的同步问题。换句话说，如果是读写比例差距不是非常大或者你的系统没有响应不及时，吞吐量瓶颈问题，那就不要去使用乐观锁，它增加了复杂度，也带来了额外的风险。</p>\n<h4 id=\"乐观锁实现方式：\"><a href=\"#乐观锁实现方式：\" class=\"headerlink\" title=\"乐观锁实现方式：\"></a><strong>乐观锁实现方式：</strong></h4><ul>\n<li><strong>版本号（记为version）</strong>：就是给数据增加一个版本标识，在数据库上就是表中增加一个version字段，每次更新把这个字段加1，读取数据的时候把version读出来，更新的时候比较version，如果还是开始读取的version就可以更新了，如果现在的version比老的version大，说明有其他事务更新了该数据，并增加了版本号，这时候得到一个无法更新的通知，用户自行根据这个通知来决定怎么处理，比如重新开始一遍。这里的关键是判断version和更新两个动作需要作为一个原子单元执行，否则在你判断可以更新以后正式更新之前有别的事务修改了version，这个时候你再去更新就可能会覆盖前一个事务做的更新，造成第二类丢失更新，所以你可以使用update … where … and version=”old version”这样的语句，根据返回结果是0还是非0来得到通知，如果是0说明更新没有成功，因为version被改了，如果返回非0说明更新成功。</li>\n<li><strong>时间戳（timestamp）</strong>：和版本号基本一样，只是通过时间戳来判断而已，注意时间戳要使用数据库服务器的时间戳不能是业务系统的时间。</li>\n<li><strong>待更新字段</strong>：和版本号方式相似，只是不增加额外字段，直接使用有效数据字段做版本控制信息，因为有时候我们可能无法改变旧系统的数据库表结构。假设有个待更新字段叫count,先去读取这个count,更新的时候去比较数据库中count的值是不是我期望的值（即开始读的值），如果是就把我修改的count的值更新到该字段，否则更新失败。java的基本类型的原子类型对象如AtomicInteger就是这种思想。</li>\n<li><p><strong>所有字段</strong>：和待更新字段类似，只是使用所有字段做版本控制信息，只有所有字段都没变化才会执行更新。</p>\n<h4 id=\"乐观锁几种方式的区别：\"><a href=\"#乐观锁几种方式的区别：\" class=\"headerlink\" title=\"乐观锁几种方式的区别：\"></a><strong>乐观锁几种方式的区别：</strong></h4><p>新系统设计可以使用version方式和timestamp方式，需要增加字段，应用范围是整条数据，不论那个字段修改都会更新version,也就是说两个事务更新同一条记录的两个不相关字段也是互斥的，不能同步进行。旧系统不能修改数据库表结构的时候使用数据字段作为版本控制信息，不需要新增字段，待更新字段方式只要其他事务修改的字段和当前事务修改的字段没有重叠就可以同步进行，并发性更高。</p>\n</li>\n</ul>\n<h1 id=\"mysql事务隔离级别实战\"><a href=\"#mysql事务隔离级别实战\" class=\"headerlink\" title=\"mysql事务隔离级别实战\"></a><strong>mysql事务隔离级别实战</strong></h1><p>实践是检验真理的唯一标准，掌握上面的理论之后，我们在数据库上实战一番家里更好地掌握也加深理解，同时有助于解决实际问题。不同数据库很多实现可能不同，这里以mysql为例讲解各种隔离级别下的情况，测试表为user（id,name,gender,passwd,email）。</p>\n<h4 id=\"隔离级别：read-uncommitted\"><a href=\"#隔离级别：read-uncommitted\" class=\"headerlink\" title=\"隔离级别：read-uncommitted\"></a><strong>隔离级别：read-uncommitted</strong></h4><p>脏读测试流程：</p>\n<ol>\n<li>A设置隔离级别为read-uncommitted（注意这里未声明都是session级别，而非全局的），开启事务，查询id=1的记录</li>\n<li>B设置隔离级别为read-uncommitted,开启事务，修改id=1的记录，但不提交</li>\n<li>A再次查询id=1的记录，和第一次查询的比较一下</li>\n<li>B事务回滚，A事务回滚。</li>\n</ol>\n<p>A:</p>\n<p><img src=\"http://img.blog.csdn.net/20160908174428502\" alt=\"这里写图片描述\"></p>\n<p>B：</p>\n<p><img src=\"http://img.blog.csdn.net/20160908174443940\" alt=\"这里写图片描述\"></p>\n<p>结论：A读到了B没有提交的内容，隔离级别为read-uncommitted的时候出现脏读。</p>\n<p>第一类更新丢失测试流程：</p>\n<ol>\n<li>A设置隔离级别为read-uncommitted，开启事务，查询id=1的记录</li>\n<li>B设置隔离级别为read-uncommitted，开启事务,查询id=1的记录</li>\n<li>A修改id=1的记录</li>\n<li>B修改id=1的记录</li>\n<li>A提交</li>\n<li>B回滚</li>\n<li>A在查询一次id=1的记录，看看自己的修改是否成功</li>\n</ol>\n<p>结论：结果不如我所想的，A的更新成功了，为什么呢？A执行update语句的时候对该条记录加锁了，B这时候根本无法修改直至超时，也就是至少在mysql中在read-uncommitted隔离级别下验证第一类丢失更新，据了解有的数据库好像可以设置不加锁，如果能够不加锁的话则可以实现，也贴一下图吧。</p>\n<p>A：</p>\n<p><img src=\"http://img.blog.csdn.net/20160920181141520\" alt=\"这里写图片描述\"></p>\n<p>B：</p>\n<p><img src=\"http://img.blog.csdn.net/20160920181155270\" alt=\"这里写图片描述\"></p>\n<p>不可重复读测试流程（省略）：</p>\n<p>结论：流程和测试脏读一样，其实在第一次测试脏读的时候就可以发现会出现不可重复读，A两次读取id=1的数据内容不同。</p>\n<p>第二类丢失更新流程：</p>\n<ol>\n<li>A开启事务，查询order_id=1的记录</li>\n<li>B开启事务，查询order_id=1的记录</li>\n<li>A把查出来的count加1后更新</li>\n<li>B把查出来的count加1更新</li>\n<li>A提交，B也提交 </li>\n</ol>\n<p>A:</p>\n<p><img src=\"http://img.blog.csdn.net/20160908225746594\" alt=\"这里写图片描述\"></p>\n<p>B:</p>\n<p><img src=\"http://img.blog.csdn.net/20160908225809188\" alt=\"这里写图片描述\"></p>\n<p>结论：A的更新丢失，我们希望的结果是3，而实际结果是2，跟java的多线程很像对不对，read-uncommitted隔离模式下会出现第二类丢失更新。</p>\n<p>幻读测试流程：</p>\n<ol>\n<li>A开启事务，查询user表所有数据</li>\n<li>B开启事务，新增一条记录</li>\n<li>A再次查询user表所有记录，和第一次作比对</li>\n<li>A回滚，B回滚</li>\n</ol>\n<p>A:</p>\n<p><img src=\"http://img.blog.csdn.net/20160908184536389\" alt=\"这里写图片描述\"></p>\n<p>B:</p>\n<p><img src=\"http://img.blog.csdn.net/20160908184547579\" alt=\"这里写图片描述\"></p>\n<p>结论：A两次查询全表数据结果不同，read-uncommitted隔离模式下会出现幻读。</p>\n<p>注：因为后面对这几种异常情况的测试流程基本和上面一样，个别有些差别读者自己注意，另外注意更改隔离级别即可，就能看到对应结果，后面的我只给出进一步能解决的异常测试截图,结论可以参照前面的对照表。</p>\n<h4 id=\"隔离级别：read-committed\"><a href=\"#隔离级别：read-committed\" class=\"headerlink\" title=\"隔离级别：read-committed\"></a><strong>隔离级别：read-committed</strong></h4><h5 id=\"脏读测试截图\"><a href=\"#脏读测试截图\" class=\"headerlink\" title=\"脏读测试截图\"></a>脏读测试截图</h5><p>A:</p>\n<p><img src=\"http://img.blog.csdn.net/20160908231058914\" alt=\"这里写图片描述\"><br>B：</p>\n<p><img src=\"http://img.blog.csdn.net/20160908231121539\" alt=\"这里写图片描述\"></p>\n<p>结论：A没有读到B没有提交的内容，隔离级别为read-committed的时候不会出现脏读。</p>\n<h4 id=\"隔离级别：repeatable-read\"><a href=\"#隔离级别：repeatable-read\" class=\"headerlink\" title=\"隔离级别：repeatable-read\"></a><strong>隔离级别：repeatable-read</strong></h4><h5 id=\"不可重复读测试截图\"><a href=\"#不可重复读测试截图\" class=\"headerlink\" title=\"不可重复读测试截图\"></a>不可重复读测试截图</h5><p>A:</p>\n<p><img src=\"http://img.blog.csdn.net/20160908233613781\" alt=\"这里写图片描述\"></p>\n<p>B：</p>\n<p><img src=\"http://img.blog.csdn.net/20160908233628156\" alt=\"这里写图片描述\"></p>\n<p>结论：A两次读取id=1的数据内容相同，repeatable-read隔离模式下不会出现不可重复读。</p>\n<h4 id=\"隔离级别：Serializable\"><a href=\"#隔离级别：Serializable\" class=\"headerlink\" title=\"隔离级别：Serializable\"></a><strong>隔离级别：Serializable</strong></h4><h5 id=\"幻读测试截图\"><a href=\"#幻读测试截图\" class=\"headerlink\" title=\"幻读测试截图\"></a>幻读测试截图</h5><p>A:</p>\n<p><img src=\"http://img.blog.csdn.net/20160908235618573\" alt=\"这里写图片描述\"></p>\n<p>B：</p>\n<p><img src=\"http://img.blog.csdn.net/20160909000404537\" alt=\"这里写图片描述\"></p>\n<p>结论：因为A事务未提交之前，B事务插入操作无法获得锁而超时，Serializable隔离模式下不会出现幻读。</p>\n","excerpt":"<h1 id=\"什么是事务（Transaction）？\"><a href=\"#什么是事务（Transaction）？\" class=\"headerlink\" title=\"什么是事务（Transaction）？\"></a><strong>什么是事务（Transaction）？</strong></h1><p>是指作为单个逻辑工作单元执行的一系列操作，要么完全地执行，要么完全地不执行。 事务处理可以确保除非事务性单元内的所有操作都成功完成，否则不会永久更新面向数据的资源。通过将一组相关操作组合为一个要么全部成功要么全部失败的单元，可以简化错误恢复并使应用程序更加可靠。一个逻辑工作单元要成为事务，必须满足所谓的ACID（原子性、一致性、隔离性和持久性）属性。事务是数据库运行中的一个逻辑工作单位，由DBMS中的事务管理子系统负责事务的处理。<br>","more":"<br>举个例子加深一下理解：同一个银行转账，A转1000块钱给B，这里存在两个操作，一个是A账户扣款1000元，两一个操作是B账户增加1000元，两者就构成了转账这个事务。</p>\n<ul>\n<li>两个操作都成功，A账户扣款1000元，B账户增加1000元，事务成功</li>\n<li>两个操作都失败，A账户和B账户金额都没变，事务失败</li>\n</ul>\n<p>最后思考一下，怎么样会出现A账户扣款1000元，B账户金额不变？如果你是把两个操作放在一个事务里面，并且是数据库提供的内在事务支持，那就不会有问题，但是开发人员把两个操作放在两个事务里面，而第二个事务失败就会出现中间状态。现实中自己实现的分布式事务处理不当也会出现中间状态，这并不是事务的错，事务本身就是规定不会出现中间状态，是事务实现者做出来的方案有问题。</p>\n<h1 id=\"事务的4个特性\"><a href=\"#事务的4个特性\" class=\"headerlink\" title=\"事务的4个特性\"></a><strong>事务的4个特性</strong></h1><ul>\n<li><p><strong>原子性(Atomic)</strong>：事务必须是原子工作单元；对于其数据修改，要么全都执行，要么全都不执行。通常，与某个事务关联的操作具有共同的目标，并且是相互依赖的。如果系统只执行这些操作的一个子集，则可能会破坏事务的总体目标。原子性消除了系统处理操作子集的可能性。</p>\n</li>\n<li><p><strong>一致性(Consistency)</strong>：事务的一致性指的是在一个事务执行之前和执行之后数据库都必须处于一致性状态。这种特性称为事务的一致性。假如数据库的状态满足所有的完整性约束，就说该数据库是一致的。</p>\n</li>\n<li><p><strong>隔离性(Isolation)</strong>：由并发事务所作的修改必须与任何其它并发事务所作的修改隔离。事务查看数据时数据所处的状态，到底是另一个事务执行之前的状态还是中间某个状态，相互之间存在什么影响，是可以通过隔离级别的设置来控制的。</p>\n</li>\n<li><p><strong>持久性(Durability)</strong>：事务结束后，事务处理的结果必须能够得到固化，即写入数据库文件中即使机器宕机数据也不会丢失，它对于系统的影响是永久性的。</p>\n</li>\n</ul>\n<h1 id=\"事务并发控制\"><a href=\"#事务并发控制\" class=\"headerlink\" title=\"事务并发控制\"></a><strong>事务并发控制</strong></h1><p>我们从另外一个方向来说说，如果不对事务进行并发控制，我们看看数据库并发操作是会有那些异常情形，有些使我们可以接受的，有些是不能接受的，注意这里的异常就是特定语境下的，并不一定就是错误什么的。假设有一个order表，有个字段叫count，作为计数用，当前值为100</p>\n<ul>\n<li><p><strong>第一类丢失更新（Update Lost）</strong>：此种更新丢失是因为回滚的原因，所以也叫回滚丢失。此时两个事务同时更新count，两个事务都读取到100，事务一更新成功并提交，count=100+1=101，事务二出于某种原因更新失败了，然后回滚，事务二就把count还原为它一开始读到的100，此时事务一的更新就这样丢失了。</p>\n</li>\n<li><p><strong>脏读（Dirty Read）</strong>：此种异常时因为一个事务读取了另一个事务修改了但是未提交的数据。举个例子，事务一更新了count=101，但是没有提交，事务二此时读取count，值为101而不是100，然后事务一出于某种原因回滚了，然后第二个事务读取的这个值就是噩梦的开始。</p>\n</li>\n<li><p><strong>不可重复读（Not Repeatable Read）</strong>：此种异常是一个事务对同一行数据执行了两次或更多次查询，但是却得到了不同的结果，也就是在一个事务里面你不能重复（即多次）读取一行数据，如果你这么做了，不能保证每次读取的结果是一样的，有可能一样有可能不一样。造成这个结果是在两次查询之间有别的事务对该行数据做了更新操作。举个例子，事务一先查询了count，值为100，此时事务二更新了count=101，事务一再次读取count,值就会变成101，两次读取结果不一样。</p>\n</li>\n<li><p><strong>第二类丢失更新（Second Update Lost）</strong>：此种更新丢失是因为更新被其他事务给覆盖了，也可以叫覆盖丢失。举个例子，两个事务同时更新count，都读取100这个初始值，事务一先更新成功并提交，count=100+1=101，事务二后更新成功并提交，count=100+1=101,由于事务二count还是从100开始增加，事务一的更新就这样丢失了。</p>\n</li>\n<li><p><strong>幻读（Phantom Read）</strong>：幻读和不可重复读有点像，只是针对的不是数据的值而是数据的数量。此种异常是一个事务在两次查询的过程中数据的数量不同，让人以为发生幻觉，幻读大概就是这么得来的吧。举个例子，事务一查询order表有多少条记录，事务二新增了一条记录，然后事务一查了一下order表有多少记录，发现和第一次不一样，这就是幻读。</p>\n</li>\n</ul>\n<h1 id=\"数据库事务隔离级别\"><a href=\"#数据库事务隔离级别\" class=\"headerlink\" title=\"数据库事务隔离级别\"></a><strong>数据库事务隔离级别</strong></h1><p>看到上面提到的几种问题，你可能会想，我擦，这么多坑怎么办啊。其实上面几种情况并不是一定都要避免的，具体看你的业务要求，包括你数据库的负载都会影响你的决定。不知道大家发现没有，上面各种异常情况都是多个事务之间相互影响造成的，这说明两个事务之间需要某种方式将他们从某种程度上分开，降低直至避免相互影响。这时候数据库事务隔离级别就粉墨登场了，而数据库的隔离级别实现一般是通过数据库锁实现的。</p>\n<ul>\n<li><p><strong>读未提交（Read Uncommitted）</strong>：该隔离级别指即使一个事务的更新语句没有提交,但是别的事务可以读到这个改变，几种异常情况都可能出现。极易出错，没有安全性可言，基本不会使用。</p>\n</li>\n<li><p><strong>读已提交（Read Committed）</strong>：该隔离级别指一个事务只能看到其他事务的已经提交的更新，看不到未提交的更新，消除了脏读和第一类丢失更新，这是大多数数据库的默认隔离级别，如Oracle,Sqlserver。</p>\n</li>\n<li><p><strong>可重复读（Repeatable Read）</strong>：该隔离级别指一个事务中进行两次或多次同样的对于数据内容的查询，得到的结果是一样的，但不保证对于数据条数的查询是一样的，只要存在读改行数据就禁止写，消除了不可重复读和第二类更新丢失，这是Mysql数据库的默认隔离级别。</p>\n</li>\n<li><p><strong>串行化（Serializable）</strong>：意思是说这个事务执行的时候不允许别的事务并发执行.完全串行化的读，只要存在读就禁止写,但可以同时读，消除了幻读。这是事务隔离的最高级别，虽然最安全最省心，但是效率太低，一般不会用。</p>\n</li>\n</ul>\n<h4 id=\"下面是各种隔离级别对各异常的控制能力：\"><a href=\"#下面是各种隔离级别对各异常的控制能力：\" class=\"headerlink\" title=\"下面是各种隔离级别对各异常的控制能力：\"></a><strong>下面是各种隔离级别对各异常的控制能力：</strong></h4><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">级别\\异常</th>\n<th style=\"text-align:center\">第一类更新丢失</th>\n<th style=\"text-align:center\">脏读</th>\n<th style=\"text-align:center\">不可重复读</th>\n<th style=\"text-align:center\">第二类丢失更新</th>\n<th style=\"text-align:center\">幻读</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">读未提交</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">Y</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">读已提交</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">Y</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">可重复读</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">Y</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">串行化</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">N</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"数据库锁分类\"><a href=\"#数据库锁分类\" class=\"headerlink\" title=\"数据库锁分类\"></a><strong>数据库锁分类</strong></h1><p>一般可以分为两类，一个是悲观锁，一个是乐观锁，悲观锁一般就是我们通常说的数据库锁机制，乐观锁一般是指用户自己实现的一种锁机制，比如hibernate实现的乐观锁甚至编程语言也有乐观锁的思想的应用。</p>\n<p><strong>悲观锁</strong>：顾名思义，就是很悲观，它对于数据被外界修改持保守态度，认为数据随时会修改，所以整个数据处理中需要将数据加锁。悲观锁一般都是依靠关系数据库提供的锁机制，事实上关系数据库中的行锁，表锁不论是读写锁都是悲观锁。</p>\n<h4 id=\"悲观锁按照使用性质划分：\"><a href=\"#悲观锁按照使用性质划分：\" class=\"headerlink\" title=\"悲观锁按照使用性质划分：\"></a><strong>悲观锁按照使用性质划分：</strong></h4><ul>\n<li><p><strong>共享锁（Share locks简记为S锁）</strong>：也称读锁，事务A对对象T加s锁，其他事务也只能对T加S，多个事务可以同时读，但不能有写操作，直到A释放S锁。</p>\n</li>\n<li><p><strong>排它锁（Exclusivelocks简记为X锁）</strong>：也称写锁，事务A对对象T加X锁以后，其他事务不能对T加任何锁，只有事务A可以读写对象T直到A释放X锁。</p>\n</li>\n<li><p><strong>更新锁（简记为U锁）</strong>：用来预定要对此对象施加X锁，它允许其他事务读，但不允许再施加U锁或X锁；当被读取的对象将要被更新时，则升级为X锁，主要是用来防止死锁的。因为使用共享锁时，修改数据的操作分为两步，首先获得一个共享锁，读取数据，然后将共享锁升级为排它锁，然后再执行修改操作。这样如果同时有两个或多个事务同时对一个对象申请了共享锁，在修改数据的时候，这些事务都要将共享锁升级为排它锁。这些事务都不会释放共享锁而是一直等待对方释放，这样就造成了死锁。如果一个数据在修改前直接申请更新锁，在数据修改的时候再升级为排它锁，就可以避免死锁。</p>\n</li>\n</ul>\n<h4 id=\"悲观锁按照作用范围划分：\"><a href=\"#悲观锁按照作用范围划分：\" class=\"headerlink\" title=\"悲观锁按照作用范围划分：\"></a><strong>悲观锁按照作用范围划分：</strong></h4><ul>\n<li><strong>行锁</strong>：锁的作用范围是行级别，数据库能够确定那些行需要锁的情况下使用行锁，如果不知道会影响哪些行的时候就会使用表锁。举个例子，一个用户表user，有主键id和用户生日birthday当你使用update … where id=?这样的语句数据库明确知道会影响哪一行，它就会使用行锁，当你使用update … where birthday=?这样的的语句的时候因为事先不知道会影响哪些行就可能会使用表锁。</li>\n<li><strong>表锁</strong>：锁的作用范围是整张表。</li>\n</ul>\n<p><strong>乐观锁</strong>：顾名思义，就是很乐观，每次自己操作数据的时候认为没有人回来修改它，所以不去加锁，但是在更新的时候会去判断在此期间数据有没有被修改，需要用户自己去实现。既然都有数据库提供的悲观锁可以方便使用为什么要使用乐观锁呢？对于读操作远多于写操作的时候，大多数都是读取，这时候一个更新操作加锁会阻塞所有读取，降低了吞吐量。最后还要释放锁，锁是需要一些开销的，我们只要想办法解决极少量的更新操作的同步问题。换句话说，如果是读写比例差距不是非常大或者你的系统没有响应不及时，吞吐量瓶颈问题，那就不要去使用乐观锁，它增加了复杂度，也带来了额外的风险。</p>\n<h4 id=\"乐观锁实现方式：\"><a href=\"#乐观锁实现方式：\" class=\"headerlink\" title=\"乐观锁实现方式：\"></a><strong>乐观锁实现方式：</strong></h4><ul>\n<li><strong>版本号（记为version）</strong>：就是给数据增加一个版本标识，在数据库上就是表中增加一个version字段，每次更新把这个字段加1，读取数据的时候把version读出来，更新的时候比较version，如果还是开始读取的version就可以更新了，如果现在的version比老的version大，说明有其他事务更新了该数据，并增加了版本号，这时候得到一个无法更新的通知，用户自行根据这个通知来决定怎么处理，比如重新开始一遍。这里的关键是判断version和更新两个动作需要作为一个原子单元执行，否则在你判断可以更新以后正式更新之前有别的事务修改了version，这个时候你再去更新就可能会覆盖前一个事务做的更新，造成第二类丢失更新，所以你可以使用update … where … and version=”old version”这样的语句，根据返回结果是0还是非0来得到通知，如果是0说明更新没有成功，因为version被改了，如果返回非0说明更新成功。</li>\n<li><strong>时间戳（timestamp）</strong>：和版本号基本一样，只是通过时间戳来判断而已，注意时间戳要使用数据库服务器的时间戳不能是业务系统的时间。</li>\n<li><strong>待更新字段</strong>：和版本号方式相似，只是不增加额外字段，直接使用有效数据字段做版本控制信息，因为有时候我们可能无法改变旧系统的数据库表结构。假设有个待更新字段叫count,先去读取这个count,更新的时候去比较数据库中count的值是不是我期望的值（即开始读的值），如果是就把我修改的count的值更新到该字段，否则更新失败。java的基本类型的原子类型对象如AtomicInteger就是这种思想。</li>\n<li><p><strong>所有字段</strong>：和待更新字段类似，只是使用所有字段做版本控制信息，只有所有字段都没变化才会执行更新。</p>\n<h4 id=\"乐观锁几种方式的区别：\"><a href=\"#乐观锁几种方式的区别：\" class=\"headerlink\" title=\"乐观锁几种方式的区别：\"></a><strong>乐观锁几种方式的区别：</strong></h4><p>新系统设计可以使用version方式和timestamp方式，需要增加字段，应用范围是整条数据，不论那个字段修改都会更新version,也就是说两个事务更新同一条记录的两个不相关字段也是互斥的，不能同步进行。旧系统不能修改数据库表结构的时候使用数据字段作为版本控制信息，不需要新增字段，待更新字段方式只要其他事务修改的字段和当前事务修改的字段没有重叠就可以同步进行，并发性更高。</p>\n</li>\n</ul>\n<h1 id=\"mysql事务隔离级别实战\"><a href=\"#mysql事务隔离级别实战\" class=\"headerlink\" title=\"mysql事务隔离级别实战\"></a><strong>mysql事务隔离级别实战</strong></h1><p>实践是检验真理的唯一标准，掌握上面的理论之后，我们在数据库上实战一番家里更好地掌握也加深理解，同时有助于解决实际问题。不同数据库很多实现可能不同，这里以mysql为例讲解各种隔离级别下的情况，测试表为user（id,name,gender,passwd,email）。</p>\n<h4 id=\"隔离级别：read-uncommitted\"><a href=\"#隔离级别：read-uncommitted\" class=\"headerlink\" title=\"隔离级别：read-uncommitted\"></a><strong>隔离级别：read-uncommitted</strong></h4><p>脏读测试流程：</p>\n<ol>\n<li>A设置隔离级别为read-uncommitted（注意这里未声明都是session级别，而非全局的），开启事务，查询id=1的记录</li>\n<li>B设置隔离级别为read-uncommitted,开启事务，修改id=1的记录，但不提交</li>\n<li>A再次查询id=1的记录，和第一次查询的比较一下</li>\n<li>B事务回滚，A事务回滚。</li>\n</ol>\n<p>A:</p>\n<p><img src=\"http://img.blog.csdn.net/20160908174428502\" alt=\"这里写图片描述\"></p>\n<p>B：</p>\n<p><img src=\"http://img.blog.csdn.net/20160908174443940\" alt=\"这里写图片描述\"></p>\n<p>结论：A读到了B没有提交的内容，隔离级别为read-uncommitted的时候出现脏读。</p>\n<p>第一类更新丢失测试流程：</p>\n<ol>\n<li>A设置隔离级别为read-uncommitted，开启事务，查询id=1的记录</li>\n<li>B设置隔离级别为read-uncommitted，开启事务,查询id=1的记录</li>\n<li>A修改id=1的记录</li>\n<li>B修改id=1的记录</li>\n<li>A提交</li>\n<li>B回滚</li>\n<li>A在查询一次id=1的记录，看看自己的修改是否成功</li>\n</ol>\n<p>结论：结果不如我所想的，A的更新成功了，为什么呢？A执行update语句的时候对该条记录加锁了，B这时候根本无法修改直至超时，也就是至少在mysql中在read-uncommitted隔离级别下验证第一类丢失更新，据了解有的数据库好像可以设置不加锁，如果能够不加锁的话则可以实现，也贴一下图吧。</p>\n<p>A：</p>\n<p><img src=\"http://img.blog.csdn.net/20160920181141520\" alt=\"这里写图片描述\"></p>\n<p>B：</p>\n<p><img src=\"http://img.blog.csdn.net/20160920181155270\" alt=\"这里写图片描述\"></p>\n<p>不可重复读测试流程（省略）：</p>\n<p>结论：流程和测试脏读一样，其实在第一次测试脏读的时候就可以发现会出现不可重复读，A两次读取id=1的数据内容不同。</p>\n<p>第二类丢失更新流程：</p>\n<ol>\n<li>A开启事务，查询order_id=1的记录</li>\n<li>B开启事务，查询order_id=1的记录</li>\n<li>A把查出来的count加1后更新</li>\n<li>B把查出来的count加1更新</li>\n<li>A提交，B也提交 </li>\n</ol>\n<p>A:</p>\n<p><img src=\"http://img.blog.csdn.net/20160908225746594\" alt=\"这里写图片描述\"></p>\n<p>B:</p>\n<p><img src=\"http://img.blog.csdn.net/20160908225809188\" alt=\"这里写图片描述\"></p>\n<p>结论：A的更新丢失，我们希望的结果是3，而实际结果是2，跟java的多线程很像对不对，read-uncommitted隔离模式下会出现第二类丢失更新。</p>\n<p>幻读测试流程：</p>\n<ol>\n<li>A开启事务，查询user表所有数据</li>\n<li>B开启事务，新增一条记录</li>\n<li>A再次查询user表所有记录，和第一次作比对</li>\n<li>A回滚，B回滚</li>\n</ol>\n<p>A:</p>\n<p><img src=\"http://img.blog.csdn.net/20160908184536389\" alt=\"这里写图片描述\"></p>\n<p>B:</p>\n<p><img src=\"http://img.blog.csdn.net/20160908184547579\" alt=\"这里写图片描述\"></p>\n<p>结论：A两次查询全表数据结果不同，read-uncommitted隔离模式下会出现幻读。</p>\n<p>注：因为后面对这几种异常情况的测试流程基本和上面一样，个别有些差别读者自己注意，另外注意更改隔离级别即可，就能看到对应结果，后面的我只给出进一步能解决的异常测试截图,结论可以参照前面的对照表。</p>\n<h4 id=\"隔离级别：read-committed\"><a href=\"#隔离级别：read-committed\" class=\"headerlink\" title=\"隔离级别：read-committed\"></a><strong>隔离级别：read-committed</strong></h4><h5 id=\"脏读测试截图\"><a href=\"#脏读测试截图\" class=\"headerlink\" title=\"脏读测试截图\"></a>脏读测试截图</h5><p>A:</p>\n<p><img src=\"http://img.blog.csdn.net/20160908231058914\" alt=\"这里写图片描述\"><br>B：</p>\n<p><img src=\"http://img.blog.csdn.net/20160908231121539\" alt=\"这里写图片描述\"></p>\n<p>结论：A没有读到B没有提交的内容，隔离级别为read-committed的时候不会出现脏读。</p>\n<h4 id=\"隔离级别：repeatable-read\"><a href=\"#隔离级别：repeatable-read\" class=\"headerlink\" title=\"隔离级别：repeatable-read\"></a><strong>隔离级别：repeatable-read</strong></h4><h5 id=\"不可重复读测试截图\"><a href=\"#不可重复读测试截图\" class=\"headerlink\" title=\"不可重复读测试截图\"></a>不可重复读测试截图</h5><p>A:</p>\n<p><img src=\"http://img.blog.csdn.net/20160908233613781\" alt=\"这里写图片描述\"></p>\n<p>B：</p>\n<p><img src=\"http://img.blog.csdn.net/20160908233628156\" alt=\"这里写图片描述\"></p>\n<p>结论：A两次读取id=1的数据内容相同，repeatable-read隔离模式下不会出现不可重复读。</p>\n<h4 id=\"隔离级别：Serializable\"><a href=\"#隔离级别：Serializable\" class=\"headerlink\" title=\"隔离级别：Serializable\"></a><strong>隔离级别：Serializable</strong></h4><h5 id=\"幻读测试截图\"><a href=\"#幻读测试截图\" class=\"headerlink\" title=\"幻读测试截图\"></a>幻读测试截图</h5><p>A:</p>\n<p><img src=\"http://img.blog.csdn.net/20160908235618573\" alt=\"这里写图片描述\"></p>\n<p>B：</p>\n<p><img src=\"http://img.blog.csdn.net/20160909000404537\" alt=\"这里写图片描述\"></p>\n<p>结论：因为A事务未提交之前，B事务插入操作无法获得锁而超时，Serializable隔离模式下不会出现幻读。</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"citfd5qbw0001vgxsxyiwp2gk","category_id":"citfd5qcc0005vgxs12iuzp47","_id":"citfd5qcr000bvgxs6qgbz9vg"},{"post_id":"citfd5qc60003vgxsigra2wnq","category_id":"citfd5qcc0005vgxs12iuzp47","_id":"citfd5qcu000fvgxsv3wxd6nn"},{"post_id":"citfd5qcf0007vgxs19v7629q","category_id":"citfd5qcr000cvgxscj7gbcum","_id":"citfd5qd0000lvgxs0dchif8o"},{"post_id":"citfd5qcf0007vgxs19v7629q","category_id":"citfd5qcy000jvgxszmygo4kk","_id":"citfd5qd1000nvgxscok3qsjm"}],"PostTag":[{"post_id":"citfd5qbw0001vgxsxyiwp2gk","tag_id":"citfd5qcf0006vgxsf3dhmty2","_id":"citfd5qct000evgxsmgxkzug7"},{"post_id":"citfd5qbw0001vgxsxyiwp2gk","tag_id":"citfd5qcn000avgxsugmb7lku","_id":"citfd5qcu000gvgxskk8p8p5u"},{"post_id":"citfd5qc60003vgxsigra2wnq","tag_id":"citfd5qcf0006vgxsf3dhmty2","_id":"citfd5qcx000ivgxs6et5wabb"},{"post_id":"citfd5qcf0007vgxs19v7629q","tag_id":"citfd5qcx000hvgxsm9je2emp","_id":"citfd5qd0000mvgxsubegikkg"},{"post_id":"citfd5qcf0007vgxs19v7629q","tag_id":"citfd5qcz000kvgxsn2daaxr3","_id":"citfd5qd1000ovgxsvm53ycdi"}],"Tag":[{"name":"hexo","_id":"citfd5qcf0006vgxsf3dhmty2"},{"name":"jekyll","_id":"citfd5qcn000avgxsugmb7lku"},{"name":"事务","_id":"citfd5qcx000hvgxsm9je2emp"},{"name":"数据库锁","_id":"citfd5qcz000kvgxsn2daaxr3"}]}}